{"version":3,"file":"useJourneyEvents-BqTmzo4O.js","sources":["../../node_modules/@tabler/icons-react/dist/esm/icons/IconCirclePlus.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconMessage.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconSwitch.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconTrophy.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconUserCheck.mjs","../../node_modules/@mui/icons-material/esm/CloudUploadOutlined.js","../../node_modules/@mui/icons-material/esm/DeleteOutlineOutlined.js","../../node_modules/@mui/icons-material/esm/DownloadOutlined.js","../../node_modules/@mui/icons-material/esm/RefreshOutlined.js","../../src/services/attachments.ts","../../src/hooks/useAttachments.ts","../../src/ui-component/Attachments/AttachmentUploader.tsx","../../src/services/comments.ts","../../src/hooks/useComments.ts","../../src/ui-component/Comments/CommentsPanel.tsx","../../src/ui-component/ActivityTimeline/ActivityTimeline.tsx","../../src/services/journey.ts","../../src/hooks/useJourneyEvents.ts"],"sourcesContent":["/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M9 12h6\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M12 9v6\", \"key\": \"svg-2\" }]];\nconst IconCirclePlus = createReactComponent(\"outline\", \"circle-plus\", \"CirclePlus\", __iconNode);\n\nexport { __iconNode, IconCirclePlus as default };\n//# sourceMappingURL=IconCirclePlus.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M8 9h8\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M8 13h6\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M18 4a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-5l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12z\", \"key\": \"svg-2\" }]];\nconst IconMessage = createReactComponent(\"outline\", \"message\", \"Message\", __iconNode);\n\nexport { __iconNode, IconMessage as default };\n//# sourceMappingURL=IconMessage.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M15 4l4 0l0 4\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M14.75 9.25l4.25 -5.25\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M5 19l4 -4\", \"key\": \"svg-2\" }], [\"path\", { \"d\": \"M15 19l4 0l0 -4\", \"key\": \"svg-3\" }], [\"path\", { \"d\": \"M5 5l14 14\", \"key\": \"svg-4\" }]];\nconst IconSwitch = createReactComponent(\"outline\", \"switch\", \"Switch\", __iconNode);\n\nexport { __iconNode, IconSwitch as default };\n//# sourceMappingURL=IconSwitch.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M8 21l8 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M12 17l0 4\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M7 4l10 0\", \"key\": \"svg-2\" }], [\"path\", { \"d\": \"M17 4v8a5 5 0 0 1 -10 0v-8\", \"key\": \"svg-3\" }], [\"path\", { \"d\": \"M5 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\", \"key\": \"svg-4\" }], [\"path\", { \"d\": \"M19 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\", \"key\": \"svg-5\" }]];\nconst IconTrophy = createReactComponent(\"outline\", \"trophy\", \"Trophy\", __iconNode);\n\nexport { __iconNode, IconTrophy as default };\n//# sourceMappingURL=IconTrophy.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M6 21v-2a4 4 0 0 1 4 -4h4\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M15 19l2 2l4 -4\", \"key\": \"svg-2\" }]];\nconst IconUserCheck = createReactComponent(\"outline\", \"user-check\", \"UserCheck\", __iconNode);\n\nexport { __iconNode, IconUserCheck as default };\n//# sourceMappingURL=IconUserCheck.mjs.map\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96M19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95C8.08 7.14 9.94 6 12 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11c1.56.1 2.78 1.41 2.78 2.96 0 1.65-1.35 3-3 3M8 13h2.55v3h2.9v-3H16l-4-4z\"\n}), 'CloudUploadOutlined');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM8 9h8v10H8zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutlineOutlined');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zm-8 2V5h2v6h1.17L12 13.17 9.83 11zm-6 7h14v2H5z\"\n}), 'DownloadOutlined');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'RefreshOutlined');","import { apiDelete, apiGet, axios } from 'utils/axios';\n\nimport type { Attachment, AttachmentListResponse, EntityIdentifier } from 'types/api';\n\nconst BASE_URL = '/api/v1/attachments';\n\ninterface AttachmentDto {\n  id: number | string;\n  filename: string;\n  file_size?: number;\n  content_type?: string;\n  entity_type?: string;\n  entity_id?: EntityIdentifier;\n  path: string;\n  created_at: string;\n}\n\nfunction mapAttachment(dto: AttachmentDto): Attachment {\n  return {\n    id: dto.id,\n    filename: dto.filename,\n    fileSize: dto.file_size,\n    contentType: dto.content_type,\n    entityType: dto.entity_type,\n    entityId: dto.entity_id,\n    path: dto.path,\n    createdAt: dto.created_at\n  };\n}\n\nfunction resolveApiBaseUrl(): string {\n  const base = import.meta.env.VITE_APP_API_URL as string | undefined;\n  if (!base) {\n    return '';\n  }\n  return base.endsWith('/') ? base.slice(0, -1) : base;\n}\n\nexport function buildAttachmentDownloadUrl(path: string): string {\n  const base = resolveApiBaseUrl();\n  const normalizedPath = path.replace(/^\\/+/, '');\n  return `${base}/api/v1/attachments/download/${normalizedPath}`;\n}\n\nexport async function listAttachments(\n  entityType: string,\n  entityId: EntityIdentifier\n): Promise<AttachmentListResponse> {\n  const response = await apiGet<AttachmentDto[]>(`${BASE_URL}/${entityType}/${entityId}`);\n  return response.map(mapAttachment);\n}\n\nexport interface UploadAttachmentOptions {\n  entityType: string;\n  entityId: EntityIdentifier;\n  file: File;\n  onUploadProgress?: (progress: number) => void;\n}\n\nexport async function uploadAttachment(options: UploadAttachmentOptions): Promise<Attachment> {\n  const formData = new FormData();\n  formData.append('file', options.file);\n  formData.append('entity_type', options.entityType);\n  formData.append('entity_id', String(options.entityId));\n\n  const { data } = await axios.post<AttachmentDto>(BASE_URL, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    onUploadProgress: (event) => {\n      if (!options.onUploadProgress || !event.total) return;\n      const progress = Math.round((event.loaded / event.total) * 100);\n      options.onUploadProgress(progress);\n    }\n  });\n\n  return mapAttachment(data);\n}\n\nexport async function deleteAttachment(id: EntityIdentifier): Promise<void> {\n  await apiDelete(`${BASE_URL}/${id}`);\n}\n\nexport const attachmentsService = {\n  listAttachments,\n  uploadAttachment,\n  deleteAttachment,\n  buildAttachmentDownloadUrl\n} as const;\n\nexport default attachmentsService;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { attachmentsService } from 'services/attachments';\nimport type { Attachment, EntityIdentifier } from 'types/api';\nimport { useWebSocketEvents } from './useWebSocketEvents';\n\ninterface UseAttachmentsOptions {\n  entityType: string;\n  entityId: EntityIdentifier;\n  autoLoad?: boolean;\n}\n\ninterface UseAttachmentsResult {\n  attachments: Attachment[];\n  loading: boolean;\n  error: unknown;\n  uploading: boolean;\n  uploadProgress: number | null;\n  deletingIds: Set<EntityIdentifier>;\n  refresh: () => Promise<void>;\n  uploadAttachment: (file: File) => Promise<Attachment>;\n  deleteAttachment: (id: EntityIdentifier) => Promise<void>;\n}\n\nexport function useAttachments(options: UseAttachmentsOptions): UseAttachmentsResult {\n  const { entityType, entityId, autoLoad = true } = options;\n\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [uploadProgress, setUploadProgress] = useState<number | null>(null);\n  const [error, setError] = useState<unknown>(null);\n  const [deletingIds, setDeletingIds] = useState<Set<EntityIdentifier>>(new Set());\n\n  const hasValidTarget = useMemo(() => entityType && entityId !== undefined, [entityType, entityId]);\n  const { subscribe } = useWebSocketEvents();\n\n  const load = useCallback(async () => {\n    if (!hasValidTarget) {\n      setAttachments([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await attachmentsService.listAttachments(entityType, entityId);\n      setAttachments(response);\n      setError(null);\n    } catch (err) {\n      setError(err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [entityId, entityType, hasValidTarget]);\n\n  useEffect(() => {\n    if (!autoLoad || !hasValidTarget) {\n      return;\n    }\n    void load();\n  }, [autoLoad, hasValidTarget, load]);\n\n  const refresh = useCallback(async () => {\n    await load();\n  }, [load]);\n\n  const upload = useCallback(\n    async (file: File) => {\n      if (!hasValidTarget) {\n        throw new Error('Cannot upload attachment without a valid entityType/entityId');\n      }\n      setUploading(true);\n      setUploadProgress(0);\n      try {\n        const attachment = await attachmentsService.uploadAttachment({\n          entityType,\n          entityId,\n          file,\n          onUploadProgress: (progress) => {\n            setUploadProgress(progress);\n          }\n        });\n        setAttachments((prev) => [attachment, ...prev]);\n        setUploadProgress(null);\n        return attachment;\n      } catch (err) {\n        setUploadProgress(null);\n        throw err;\n      } finally {\n        setUploading(false);\n      }\n    },\n    [entityId, entityType, hasValidTarget]\n  );\n\n  const remove = useCallback(async (id: EntityIdentifier) => {\n    setDeletingIds((prev) => {\n      const next = new Set(prev);\n      next.add(id);\n      return next;\n    });\n    try {\n      await attachmentsService.deleteAttachment(id);\n      setAttachments((prev) => prev.filter((attachment) => attachment.id !== id));\n    } finally {\n      setDeletingIds((prev) => {\n        const next = new Set(prev);\n        next.delete(id);\n        return next;\n      });\n    }\n  }, []);\n\n  // Auto-refresh on attachment:uploaded WebSocket event\n  useEffect(() => {\n    if (!hasValidTarget) return;\n\n    const unsubscribe = subscribe('attachment:uploaded', (data) => {\n      const attachment = data as Attachment;\n      // Only refresh if the event matches our entityType/entityId\n      if (attachment.entityType === entityType && attachment.entityId === entityId) {\n        refresh().catch((err) => {\n          console.error('[useAttachments] Failed to refresh on attachment:uploaded event:', err);\n        });\n      }\n    });\n\n    return unsubscribe;\n  }, [subscribe, entityType, entityId, hasValidTarget, refresh]);\n\n  // Auto-refresh on attachment:deleted WebSocket event\n  useEffect(() => {\n    if (!hasValidTarget) return;\n\n    const unsubscribe = subscribe('attachment:deleted', (data) => {\n      const { entityType: evtEntityType, entityId: evtEntityId } = data as {\n        entityType: string;\n        entityId: EntityIdentifier;\n      };\n      // Only refresh if the event matches our entityType/entityId\n      if (evtEntityType === entityType && evtEntityId === entityId) {\n        refresh().catch((err) => {\n          console.error('[useAttachments] Failed to refresh on attachment:deleted event:', err);\n        });\n      }\n    });\n\n    return unsubscribe;\n  }, [subscribe, entityType, entityId, hasValidTarget, refresh]);\n\n  return {\n    attachments,\n    loading,\n    error,\n    uploading,\n    uploadProgress,\n    deletingIds,\n    refresh,\n    uploadAttachment: upload,\n    deleteAttachment: remove\n  };\n}\n\nexport default useAttachments;\n","import { useCallback, useMemo, useRef, useState } from 'react';\n\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport DownloadOutlinedIcon from '@mui/icons-material/DownloadOutlined';\nimport RefreshOutlinedIcon from '@mui/icons-material/RefreshOutlined';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Stack from '@mui/material/Stack';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\n\nimport { useAttachments } from 'hooks/useAttachments';\nimport { buildAttachmentDownloadUrl } from 'services/attachments';\nimport type { Attachment, EntityIdentifier } from 'types/api';\n\nexport interface AttachmentUploaderProps {\n  readonly entityType: string;\n  readonly entityId: EntityIdentifier;\n  readonly title?: string;\n  readonly accept?: string;\n}\n\nfunction formatFileSize(bytes?: number): string {\n  if (!bytes || Number.isNaN(bytes)) {\n    return '—';\n  }\n  if (bytes < 1024) {\n    return `${bytes} B`;\n  }\n  const units = ['KB', 'MB', 'GB', 'TB'];\n  let size = bytes / 1024;\n  let unitIndex = 0;\n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024;\n    unitIndex += 1;\n  }\n  return `${size.toFixed(1)} ${units[unitIndex]}`;\n}\n\nfunction formatTimestamp(value: string): string {\n  try {\n    return new Intl.DateTimeFormat(undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(new Date(value));\n  } catch {\n    return value;\n  }\n}\n\nexport function AttachmentUploader({\n  entityType,\n  entityId,\n  title = 'Attachments',\n  accept\n}: AttachmentUploaderProps) {\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [actionError, setActionError] = useState<string | null>(null);\n\n  const {\n    attachments,\n    loading,\n    uploading,\n    uploadProgress,\n    deletingIds,\n    error,\n    refresh,\n    uploadAttachment,\n    deleteAttachment\n  } = useAttachments({\n    entityType,\n    entityId\n  });\n\n  const hasProgress = useMemo(\n    () => typeof uploadProgress === 'number' && uploadProgress > 0 && uploadProgress < 100,\n    [uploadProgress]\n  );\n\n  const handleSelectFile = useCallback(\n    async (event: React.ChangeEvent<HTMLInputElement>) => {\n      const file = event.target.files?.[0];\n      if (!file) return;\n      try {\n        setActionError(null);\n        await uploadAttachment(file);\n      } catch (err) {\n        setActionError(err instanceof Error ? err.message : 'Unable to upload file.');\n      } finally {\n        // reset input so same file can be selected again\n        event.target.value = '';\n      }\n    },\n    [uploadAttachment]\n  );\n\n  const handleDelete = useCallback(\n    async (attachment: Attachment) => {\n      try {\n        setActionError(null);\n        await deleteAttachment(attachment.id);\n      } catch (err) {\n        setActionError(err instanceof Error ? err.message : 'Unable to delete file.');\n      }\n    },\n    [deleteAttachment]\n  );\n\n  const handleTriggerUpload = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title={title}\n        action={\n          <Tooltip title=\"Refresh list\">\n            <span>\n              <IconButton onClick={() => void refresh()} disabled={loading}>\n                {loading ? <CircularProgress size={20} /> : <RefreshOutlinedIcon fontSize=\"small\" />}\n              </IconButton>\n            </span>\n          </Tooltip>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Stack spacing={2}>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            hidden\n            accept={accept}\n            onChange={(event) => void handleSelectFile(event)}\n          />\n          <Button\n            variant=\"outlined\"\n            startIcon={<CloudUploadOutlinedIcon />}\n            onClick={handleTriggerUpload}\n            disabled={uploading}\n          >\n            {uploading ? 'Uploading…' : 'Upload File'}\n          </Button>\n          {hasProgress && (\n            <Box>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                Uploading… {uploadProgress}%\n              </Typography>\n              <LinearProgress variant=\"determinate\" value={uploadProgress ?? 0} sx={{ mt: 1 }} />\n            </Box>\n          )}\n          {(error || actionError) && (\n            <Alert severity=\"error\">{actionError ?? 'Unable to load attachments.'}</Alert>\n          )}\n        </Stack>\n      </CardContent>\n      <Divider />\n      <CardActions disableSpacing sx={{ flexDirection: 'column', alignItems: 'stretch', p: 0 }}>\n        {loading && (\n          <Box display=\"flex\" justifyContent=\"center\" py={3}>\n            <CircularProgress size={24} />\n          </Box>\n        )}\n        {!loading && attachments.length === 0 && (\n          <Box px={3} py={4}>\n            <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"center\">\n              No attachments yet.\n            </Typography>\n          </Box>\n        )}\n        {!loading && attachments.length > 0 && (\n          <List sx={{ width: '100%' }}>\n            {attachments.map((attachment) => {\n              const downloadUrl = buildAttachmentDownloadUrl(attachment.path);\n              return (\n                <ListItem\n                  key={attachment.id}\n                  secondaryAction={\n                    <Stack direction=\"row\" spacing={1}>\n                      <Tooltip title=\"Download\">\n                        <IconButton\n                          component=\"a\"\n                          href={downloadUrl}\n                          target=\"_blank\"\n                          rel=\"noreferrer noopener\"\n                        >\n                          <DownloadOutlinedIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      <Tooltip title=\"Delete\">\n                        <span>\n                          <IconButton\n                            onClick={() => void handleDelete(attachment)}\n                            disabled={deletingIds.has(attachment.id)}\n                          >\n                            {deletingIds.has(attachment.id) ? (\n                              <CircularProgress size={20} />\n                            ) : (\n                              <DeleteOutlineOutlinedIcon fontSize=\"small\" />\n                            )}\n                          </IconButton>\n                        </span>\n                      </Tooltip>\n                    </Stack>\n                  }\n                >\n                  <ListItemText\n                    primary={attachment.filename}\n                    secondary={\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {formatFileSize(attachment.fileSize)} • {formatTimestamp(attachment.createdAt)}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default AttachmentUploader;\n","import { apiDelete, apiGet, apiPatch, apiPost } from 'utils/axios';\n\nimport type {\n  Comment,\n  CommentCreateDto,\n  CommentListResponse,\n  CommentUpdateDto,\n  EntityIdentifier\n} from 'types/api';\n\nconst BASE_URL = '/api/v1/comments';\n\ninterface CommentDto {\n  id: number | string;\n  entity_type: string;\n  entity_id: EntityIdentifier;\n  content: string;\n  mentions?: EntityIdentifier[];\n  author_id?: EntityIdentifier;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface CommentListDto {\n  items: CommentDto[];\n  total: number;\n}\n\ninterface CommentCreateRequest {\n  entity_type: string;\n  entity_id: string;\n  content: string;\n  mentions?: EntityIdentifier[];\n}\n\ninterface CommentUpdateRequest {\n  content?: string;\n  mentions?: EntityIdentifier[];\n}\n\nexport interface ListCommentsParams {\n  entityType?: string;\n  entityId?: EntityIdentifier;\n}\n\nfunction mapComment(dto: CommentDto): Comment {\n  return {\n    id: dto.id,\n    entityType: dto.entity_type,\n    entityId: dto.entity_id,\n    content: dto.content,\n    mentions: dto.mentions,\n    authorId: dto.author_id,\n    createdAt: dto.created_at,\n    updatedAt: dto.updated_at\n  };\n}\n\nfunction toCreateRequest(payload: CommentCreateDto): CommentCreateRequest {\n  return {\n    entity_type: payload.entityType,\n    entity_id: String(payload.entityId),\n    content: payload.content,\n    mentions: payload.mentions\n  };\n}\n\nfunction toUpdateRequest(payload: CommentUpdateDto): CommentUpdateRequest {\n  return {\n    content: payload.content,\n    mentions: payload.mentions\n  };\n}\n\nexport async function listComments(params: ListCommentsParams): Promise<CommentListResponse> {\n  const response = await apiGet<CommentListDto>(BASE_URL, {\n    params: {\n      entity_type: params.entityType,\n      entity_id: params.entityId\n    }\n  });\n\n  return {\n    items: response.items.map(mapComment),\n    total: response.total\n  };\n}\n\nexport async function createComment(payload: CommentCreateDto): Promise<Comment> {\n  const response = await apiPost<CommentCreateRequest, CommentDto>(BASE_URL, toCreateRequest(payload));\n\n  return mapComment(response);\n}\n\nexport async function updateComment(\n  id: EntityIdentifier,\n  payload: CommentUpdateDto\n): Promise<Comment> {\n  const response = await apiPatch<CommentUpdateRequest, CommentDto>(\n    `${BASE_URL}/${id}`,\n    toUpdateRequest(payload)\n  );\n\n  return mapComment(response);\n}\n\nexport async function deleteComment(id: EntityIdentifier): Promise<void> {\n  await apiDelete(`${BASE_URL}/${id}`);\n}\n\nexport const commentsService = {\n  listComments,\n  createComment,\n  updateComment,\n  deleteComment\n} as const;\n\nexport default commentsService;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { commentsService } from 'services/comments';\nimport type {\n  Comment,\n  CommentCreateDto,\n  CommentListResponse,\n  CommentUpdateDto,\n  EntityIdentifier\n} from 'types/api';\nimport { useWebSocketEvents } from './useWebSocketEvents';\n\ninterface UseCommentsOptions {\n  entityType: string;\n  entityId: EntityIdentifier;\n  autoLoad?: boolean;\n}\n\ninterface CreateCommentInput {\n  content: string;\n  mentions?: EntityIdentifier[];\n}\n\ninterface UseCommentsResult {\n  comments: Comment[];\n  total: number;\n  loading: boolean;\n  error: unknown;\n  isCreating: boolean;\n  updatingIds: Set<EntityIdentifier>;\n  deletingIds: Set<EntityIdentifier>;\n  refresh: () => Promise<void>;\n  createComment: (input: CreateCommentInput) => Promise<Comment>;\n  updateComment: (id: EntityIdentifier, payload: CommentUpdateDto) => Promise<Comment>;\n  deleteComment: (id: EntityIdentifier) => Promise<void>;\n}\n\nexport function useComments(options: UseCommentsOptions): UseCommentsResult {\n  const { entityType, entityId, autoLoad = true } = options;\n\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [total, setTotal] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<unknown>(null);\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n  const [updatingIds, setUpdatingIds] = useState<Set<EntityIdentifier>>(new Set());\n  const [deletingIds, setDeletingIds] = useState<Set<EntityIdentifier>>(new Set());\n\n  const hasValidTarget = useMemo(() => entityType && entityId !== undefined, [entityType, entityId]);\n  const { subscribe } = useWebSocketEvents();\n\n  const handleResponse = useCallback((response: CommentListResponse) => {\n    setComments(response.items);\n    setTotal(response.total);\n  }, []);\n\n  const load = useCallback(async () => {\n    if (!hasValidTarget) {\n      setComments([]);\n      setTotal(0);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await commentsService.listComments({\n        entityType,\n        entityId\n      });\n      handleResponse(response);\n      setError(null);\n    } catch (err) {\n      setError(err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [entityType, entityId, handleResponse, hasValidTarget]);\n\n  useEffect(() => {\n    if (!autoLoad || !hasValidTarget) {\n      return;\n    }\n    void load();\n  }, [autoLoad, hasValidTarget, load]);\n\n  const refresh = useCallback(async () => {\n    await load();\n  }, [load]);\n\n  const create = useCallback(\n    async (input: CreateCommentInput) => {\n      if (!hasValidTarget) {\n        throw new Error('Cannot create comment without a valid entityType/entityId');\n      }\n      setIsCreating(true);\n      try {\n        const payload: CommentCreateDto = {\n          entityType,\n          entityId,\n          content: input.content,\n          mentions: input.mentions\n        };\n        const created = await commentsService.createComment(payload);\n        setComments((prev) => [created, ...prev]);\n        setTotal((prev) => prev + 1);\n        return created;\n      } finally {\n        setIsCreating(false);\n      }\n    },\n    [entityId, entityType, hasValidTarget]\n  );\n\n  const update = useCallback(\n    async (id: EntityIdentifier, payload: CommentUpdateDto) => {\n      setUpdatingIds((prev) => {\n        const next = new Set(prev);\n        next.add(id);\n        return next;\n      });\n      try {\n        const updated = await commentsService.updateComment(id, payload);\n        setComments((prev) => prev.map((comment) => (comment.id === id ? updated : comment)));\n        return updated;\n      } finally {\n        setUpdatingIds((prev) => {\n          const next = new Set(prev);\n          next.delete(id);\n          return next;\n        });\n      }\n    },\n    []\n  );\n\n  const remove = useCallback(async (id: EntityIdentifier) => {\n    setDeletingIds((prev) => {\n      const next = new Set(prev);\n      next.add(id);\n      return next;\n    });\n    try {\n      await commentsService.deleteComment(id);\n      setComments((prev) => prev.filter((comment) => comment.id !== id));\n      setTotal((prev) => Math.max(prev - 1, 0));\n    } finally {\n      setDeletingIds((prev) => {\n        const next = new Set(prev);\n        next.delete(id);\n        return next;\n      });\n    }\n  }, []);\n\n  // Auto-refresh on comment:new WebSocket event\n  useEffect(() => {\n    if (!hasValidTarget) return;\n\n    const unsubscribe = subscribe('comment:new', (data) => {\n      const comment = data as Comment;\n      // Only refresh if the event matches our entityType/entityId\n      if (comment.entityType === entityType && comment.entityId === entityId) {\n        refresh().catch((err) => {\n          console.error('[useComments] Failed to refresh on comment:new event:', err);\n        });\n      }\n    });\n\n    return unsubscribe;\n  }, [subscribe, entityType, entityId, hasValidTarget, refresh]);\n\n  // Auto-refresh on comment:updated WebSocket event\n  useEffect(() => {\n    if (!hasValidTarget) return;\n\n    const unsubscribe = subscribe('comment:updated', (data) => {\n      const comment = data as Comment;\n      // Only refresh if the event matches our entityType/entityId\n      if (comment.entityType === entityType && comment.entityId === entityId) {\n        refresh().catch((err) => {\n          console.error('[useComments] Failed to refresh on comment:updated event:', err);\n        });\n      }\n    });\n\n    return unsubscribe;\n  }, [subscribe, entityType, entityId, hasValidTarget, refresh]);\n\n  // Auto-refresh on comment:deleted WebSocket event\n  useEffect(() => {\n    if (!hasValidTarget) return;\n\n    const unsubscribe = subscribe('comment:deleted', (data) => {\n      const { entityType: evtEntityType, entityId: evtEntityId } = data as {\n        entityType: string;\n        entityId: EntityIdentifier;\n      };\n      // Only refresh if the event matches our entityType/entityId\n      if (evtEntityType === entityType && evtEntityId === entityId) {\n        refresh().catch((err) => {\n          console.error('[useComments] Failed to refresh on comment:deleted event:', err);\n        });\n      }\n    });\n\n    return unsubscribe;\n  }, [subscribe, entityType, entityId, hasValidTarget, refresh]);\n\n  return {\n    comments,\n    total,\n    loading,\n    error,\n    isCreating,\n    updatingIds,\n    deletingIds,\n    refresh,\n    createComment: create,\n    updateComment: update,\n    deleteComment: remove\n  };\n}\n\nexport default useComments;\n","import { useCallback, useMemo, useState } from 'react';\n\nimport RefreshOutlinedIcon from '@mui/icons-material/RefreshOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\n\nimport { useComments } from 'hooks/useComments';\nimport type { EntityIdentifier } from 'types/api';\n\nexport interface CommentsPanelProps {\n  readonly entityType: string;\n  readonly entityId: EntityIdentifier;\n  readonly title?: string;\n}\n\nfunction formatTimestamp(value: string): string {\n  try {\n    return new Intl.DateTimeFormat(undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(new Date(value));\n  } catch {\n    return value;\n  }\n}\n\nexport function CommentsPanel({ entityType, entityId, title = 'Comments' }: CommentsPanelProps) {\n  const [draft, setDraft] = useState<string>('');\n  const [submitError, setSubmitError] = useState<string | null>(null);\n\n  const {\n    comments,\n    loading,\n    error,\n    isCreating,\n    deletingIds,\n    refresh,\n    createComment,\n    deleteComment\n  } = useComments({\n    entityType,\n    entityId\n  });\n\n  const canSubmit = useMemo(() => draft.trim().length > 0 && !isCreating, [draft, isCreating]);\n\n  const handleSubmit = useCallback(async () => {\n    if (!draft.trim()) {\n      return;\n    }\n    try {\n      setSubmitError(null);\n      await createComment({ content: draft.trim() });\n      setDraft('');\n    } catch (err) {\n      setSubmitError(err instanceof Error ? err.message : 'Unable to post comment.');\n    }\n  }, [createComment, draft]);\n\n  const handleDelete = useCallback(\n    async (id: EntityIdentifier) => {\n      try {\n        await deleteComment(id);\n      } catch (err) {\n        setSubmitError(err instanceof Error ? err.message : 'Unable to delete comment.');\n      }\n    },\n    [deleteComment]\n  );\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        title={title}\n        action={\n          <Tooltip title=\"Refresh\">\n            <span>\n              <IconButton onClick={() => void refresh()} disabled={loading}>\n                {loading ? <CircularProgress size={20} /> : <RefreshOutlinedIcon fontSize=\"small\" />}\n              </IconButton>\n            </span>\n          </Tooltip>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Stack spacing={2}>\n          <TextField\n            label=\"Add a comment\"\n            placeholder=\"Share an update...\"\n            value={draft}\n            onChange={(event) => setDraft(event.target.value)}\n            multiline\n            minRows={3}\n            disabled={isCreating}\n          />\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Button\n              variant=\"contained\"\n              onClick={() => void handleSubmit()}\n              disabled={!canSubmit}\n            >\n              {isCreating ? <CircularProgress size={20} /> : 'Post'}\n            </Button>\n          </Box>\n          {submitError && <Alert severity=\"error\">{submitError}</Alert>}\n          {error && !submitError && (\n            <Alert severity=\"error\">Unable to load comments. Please try again.</Alert>\n          )}\n        </Stack>\n      </CardContent>\n      <Divider />\n      <CardActions disableSpacing sx={{ flexDirection: 'column', alignItems: 'stretch', p: 0 }}>\n        {loading && (\n          <Box display=\"flex\" justifyContent=\"center\" py={3}>\n            <CircularProgress size={24} />\n          </Box>\n        )}\n        {!loading && comments.length === 0 && (\n          <Box px={3} py={4}>\n            <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"center\">\n              No comments yet. Start the conversation above.\n            </Typography>\n          </Box>\n        )}\n        {!loading && comments.length > 0 && (\n          <List sx={{ width: '100%' }}>\n            {comments.map((comment) => (\n              <ListItem\n                key={comment.id}\n                alignItems=\"flex-start\"\n                secondaryAction={\n                  <Tooltip title=\"Delete comment\">\n                    <span>\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        onClick={() => void handleDelete(comment.id)}\n                        disabled={deletingIds.has(comment.id)}\n                      >\n                        {deletingIds.has(comment.id) ? (\n                          <CircularProgress size={20} />\n                        ) : (\n                          <DeleteOutlineOutlinedIcon fontSize=\"small\" />\n                        )}\n                      </IconButton>\n                    </span>\n                  </Tooltip>\n                }\n              >\n                <ListItemText\n                  primary={<Typography variant=\"body1\">{comment.content}</Typography>}\n                  secondary={\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {formatTimestamp(comment.createdAt)}\n                    </Typography>\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CommentsPanel;\n","import {\n  Alert,\n  Avatar,\n  Box,\n  Button,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@mui/material';\nimport {\n  IconCheck,\n  IconMessage,\n  IconSwitch,\n  IconUserCheck,\n  IconFileInvoice,\n  IconAlertCircle,\n  IconCirclePlus,\n  IconTrophy,\n  IconX\n} from '@tabler/icons-react';\nimport type { JourneyEvent } from 'types/api';\n\ninterface ActivityTimelineProps {\n  readonly events: JourneyEvent[];\n  readonly loading: boolean;\n  readonly error: Error | null;\n  readonly onRetry?: () => void;\n}\n\n// Map event types to icons and colors\nfunction getEventIcon(type: string): {\n  icon: React.ElementType;\n  color: string;\n  bgcolor: string;\n} {\n  switch (type) {\n    case 'status_change':\n      return { icon: IconSwitch, color: 'primary.main', bgcolor: 'primary.light' };\n    case 'deal_won':\n      return { icon: IconTrophy, color: 'success.main', bgcolor: 'success.light' };\n    case 'deal_lost':\n      return { icon: IconX, color: 'error.main', bgcolor: 'error.light' };\n    case 'first_quote_sent':\n      return { icon: IconFileInvoice, color: 'secondary.main', bgcolor: 'secondary.light' };\n    case 'message_sent':\n      return { icon: IconMessage, color: 'info.main', bgcolor: 'info.light' };\n    case 'agent_handoff':\n      return { icon: IconUserCheck, color: 'warning.main', bgcolor: 'warning.light' };\n    case 'deal_created':\n    case 'lead_created':\n      return { icon: IconCirclePlus, color: 'primary.main', bgcolor: 'primary.light' };\n    case 'lead_converted':\n      return { icon: IconCheck, color: 'success.main', bgcolor: 'success.light' };\n    default:\n      return { icon: IconAlertCircle, color: 'text.secondary', bgcolor: 'action.hover' };\n  }\n}\n\n// Generate human-readable title from event type and payload\nfunction getEventTitle(event: JourneyEvent): string {\n  const { type, payload } = event;\n\n  switch (type) {\n    case 'status_change':\n      if (payload?.from && payload?.to) {\n        return `Status changed from ${payload.from} to ${payload.to}`;\n      }\n      return 'Status changed';\n    case 'deal_won':\n      return 'Deal marked as Won';\n    case 'deal_lost':\n      return payload?.reason\n        ? `Deal marked as Lost: ${payload.reason}`\n        : 'Deal marked as Lost';\n    case 'first_quote_sent':\n      return 'First quote sent to customer';\n    case 'message_sent':\n      return payload?.subject\n        ? `Message sent: ${payload.subject}`\n        : 'Message sent';\n    case 'agent_handoff':\n      return payload?.agent\n        ? `Handed off to ${payload.agent}`\n        : 'Handed off to another agent';\n    case 'deal_created':\n      return 'Deal created';\n    case 'lead_created':\n      return 'Lead created';\n    case 'lead_converted':\n      return 'Lead converted to deal';\n    default:\n      return type\n        .split('_')\n        .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n  }\n}\n\n// Generate optional description from payload\nfunction getEventDescription(event: JourneyEvent): string | null {\n  const { payload } = event;\n\n  if (!payload) return null;\n\n  if (payload.description) {\n    return String(payload.description);\n  }\n\n  if (payload.notes) {\n    return String(payload.notes);\n  }\n\n  return null;\n}\n\n// Format timestamp\nfunction formatTimestamp(date: string): string {\n  const eventDate = new Date(date);\n  const now = new Date();\n  const diffMs = now.getTime() - eventDate.getTime();\n  const diffMins = Math.floor(diffMs / 60000);\n  const diffHours = Math.floor(diffMs / 3600000);\n  const diffDays = Math.floor(diffMs / 86400000);\n\n  // Relative time for recent events\n  if (diffMins < 1) {\n    return 'Just now';\n  }\n  if (diffMins < 60) {\n    return `${diffMins}m ago`;\n  }\n  if (diffHours < 24) {\n    return `${diffHours}h ago`;\n  }\n  if (diffDays < 7) {\n    return `${diffDays}d ago`;\n  }\n\n  // Absolute time for older events\n  return eventDate.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric',\n    year: eventDate.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n  });\n}\n\nexport default function ActivityTimeline({\n  events,\n  loading,\n  error,\n  onRetry\n}: ActivityTimelineProps) {\n  // Loading state\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', py: 6 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        <Typography variant=\"body2\" sx={{ mb: 1 }}>\n          Failed to load activity timeline. Please try again.\n        </Typography>\n        {onRetry && (\n          <Button size=\"small\" variant=\"outlined\" onClick={onRetry}>\n            Retry\n          </Button>\n        )}\n      </Alert>\n    );\n  }\n\n  // Empty state\n  if (events.length === 0) {\n    return (\n      <Box sx={{ py: 6, textAlign: 'center' }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          No activity yet. Events will appear here as actions are taken.\n        </Typography>\n      </Box>\n    );\n  }\n\n  // Timeline\n  return (\n    <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n      {events.map((event) => {\n        const { icon: Icon, color, bgcolor } = getEventIcon(event.type);\n        const title = getEventTitle(event);\n        const description = getEventDescription(event);\n        const timestamp = formatTimestamp(event.occurredAt);\n\n        return (\n          <ListItem\n            key={event.id}\n            alignItems=\"flex-start\"\n            sx={{\n              borderLeft: 2,\n              borderColor: 'divider',\n              '&:first-of-type': {\n                borderTopLeftRadius: 1,\n                borderTopRightRadius: 1\n              },\n              '&:last-of-type': {\n                borderBottomLeftRadius: 1,\n                borderBottomRightRadius: 1\n              }\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor, color }}>\n                <Icon size={20} />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={\n                <Typography variant=\"subtitle2\" component=\"span\">\n                  {title}\n                </Typography>\n              }\n              secondary={\n                <>\n                  {description && (\n                    <Typography\n                      variant=\"body2\"\n                      color=\"text.secondary\"\n                      sx={{ mt: 0.5, mb: 0.5 }}\n                    >\n                      {description}\n                    </Typography>\n                  )}\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {timestamp}\n                  </Typography>\n                </>\n              }\n            />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\n\n","import { apiGet, apiPost } from 'utils/axios';\nimport type {\n  JourneyEvent,\n  JourneyEventCreateDto,\n  JourneyEventListResponse,\n  EntityIdentifier\n} from 'types/api';\n\nconst API_BASE_URL = '/api/v1/journey-events';\n\n/**\n * List journey events for a specific entity\n */\nexport async function listJourneyEvents(\n  entityType: 'deal' | 'lead',\n  entityId: EntityIdentifier,\n  options?: {\n    limit?: number;\n    offset?: number;\n    since?: string;\n  }\n): Promise<JourneyEventListResponse> {\n  const params = {\n    entity_type: entityType,\n    entity_id: entityId,\n    ...options\n  };\n  \n  const response = await apiGet<{\n    items: Array<{\n      id: string;\n      entity_type: string;\n      entity_id: EntityIdentifier;\n      type: string;\n      payload?: Record<string, unknown>;\n      occurred_at: string;\n      created_at: string;\n      updated_at?: string;\n    }>;\n    total: number;\n  }>(API_BASE_URL, { params });\n\n  // Map snake_case to camelCase\n  return {\n    items: response.items.map((item) => ({\n      id: item.id,\n      entityType: item.entity_type as 'deal' | 'lead',\n      entityId: item.entity_id,\n      type: item.type,\n      payload: item.payload,\n      occurredAt: item.occurred_at,\n      createdAt: item.created_at,\n      updatedAt: item.updated_at || item.created_at\n    })),\n    total: response.total\n  };\n}\n\n/**\n * Create a new journey event\n */\nexport async function createJourneyEvent(\n  dto: JourneyEventCreateDto\n): Promise<JourneyEvent> {\n  // Map camelCase to snake_case for backend\n  const payload = {\n    entity_type: dto.entityType,\n    entity_id: dto.entityId,\n    type: dto.type,\n    payload: dto.payload,\n    occurred_at: dto.occurredAt\n  };\n\n  const response = await apiPost<{\n    id: string;\n    entity_type: string;\n    entity_id: EntityIdentifier;\n    type: string;\n    payload?: Record<string, unknown>;\n    occurred_at: string;\n    created_at: string;\n    updated_at?: string;\n  }>(API_BASE_URL, payload);\n\n  // Map snake_case to camelCase\n  return {\n    id: response.id,\n    entityType: response.entity_type as 'deal' | 'lead',\n    entityId: response.entity_id,\n    type: response.type,\n    payload: response.payload,\n    occurredAt: response.occurred_at,\n    createdAt: response.created_at,\n    updatedAt: response.updated_at || response.created_at\n  };\n}\n\nexport const journeyApi = {\n  listJourneyEvents,\n  createJourneyEvent\n};\n\n\n","import { useCallback, useEffect, useState } from 'react';\nimport { journeyApi } from 'services/journey';\nimport { useWebSocketEvents } from './useWebSocketEvents';\nimport type { JourneyEvent, JourneyEventCreateDto, EntityIdentifier } from 'types/api';\n\ninterface UseJourneyEventsOptions {\n  entityType: 'deal' | 'lead';\n  entityId: EntityIdentifier;\n}\n\ninterface UseJourneyEventsResult {\n  events: JourneyEvent[];\n  loading: boolean;\n  error: Error | null;\n  refresh: () => Promise<void>;\n  addEvent: (dto: Omit<JourneyEventCreateDto, 'entityType' | 'entityId'>) => Promise<void>;\n}\n\n/**\n * Hook to manage journey events for a specific entity\n * \n * Features:\n * - Auto-loads events on mount\n * - Subscribes to WebSocket for real-time updates\n * - Provides methods to add events and refresh\n */\nexport function useJourneyEvents({\n  entityType,\n  entityId\n}: UseJourneyEventsOptions): UseJourneyEventsResult {\n  const [events, setEvents] = useState<JourneyEvent[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  const loadEvents = useCallback(async () => {\n    if (!entityId) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await journeyApi.listJourneyEvents(entityType, entityId);\n      setEvents(response.items);\n    } catch (err) {\n      setError(err instanceof Error ? err : new Error('Failed to load journey events'));\n      console.error('[useJourneyEvents] Load failed:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [entityType, entityId]);\n\n  // Load events on mount and when entityId changes\n  useEffect(() => {\n    void loadEvents();\n  }, [loadEvents]);\n\n  // Subscribe to WebSocket for real-time updates\n  useWebSocketEvents('journey:new', (event: unknown) => {\n    try {\n      const journeyEvent = event as {\n        entity_type?: string;\n        entity_id?: EntityIdentifier;\n        id: string;\n        type: string;\n        payload?: Record<string, unknown>;\n        occurred_at: string;\n        created_at: string;\n        updated_at?: string;\n      };\n\n      // Filter events for this entity\n      if (\n        journeyEvent.entity_type === entityType &&\n        String(journeyEvent.entity_id) === String(entityId)\n      ) {\n        // Map to camelCase\n        const mappedEvent: JourneyEvent = {\n          id: journeyEvent.id,\n          entityType: journeyEvent.entity_type as 'deal' | 'lead',\n          entityId: journeyEvent.entity_id,\n          type: journeyEvent.type,\n          payload: journeyEvent.payload,\n          occurredAt: journeyEvent.occurred_at,\n          createdAt: journeyEvent.created_at,\n          updatedAt: journeyEvent.updated_at || journeyEvent.created_at\n        };\n\n        // Prepend new event (events are sorted desc by occurred_at)\n        setEvents((prev) => [mappedEvent, ...prev]);\n      }\n    } catch (err) {\n      console.error('[useJourneyEvents] WebSocket event processing failed:', err);\n    }\n  });\n\n  const refresh = useCallback(async () => {\n    await loadEvents();\n  }, [loadEvents]);\n\n  const addEvent = useCallback(\n    async (dto: Omit<JourneyEventCreateDto, 'entityType' | 'entityId'>) => {\n      try {\n        const fullDto: JourneyEventCreateDto = {\n          entityType,\n          entityId,\n          ...dto\n        };\n\n        const newEvent = await journeyApi.createJourneyEvent(fullDto);\n\n        // Optimistically add to state (WS will also send it, but we dedupe by id)\n        setEvents((prev) => {\n          const exists = prev.some((e) => e.id === newEvent.id);\n          if (exists) return prev;\n          return [newEvent, ...prev];\n        });\n      } catch (err) {\n        console.error('[useJourneyEvents] Failed to add event:', err);\n        throw err;\n      }\n    },\n    [entityType, entityId]\n  );\n\n  return {\n    events,\n    loading,\n    error,\n    refresh,\n    addEvent\n  };\n}\n\n\n"],"names":["__iconNode","IconCirclePlus","createReactComponent","IconMessage","IconSwitch","IconTrophy","IconUserCheck","CloudUploadOutlinedIcon","createSvgIcon","_jsx","DeleteOutlineOutlinedIcon","DownloadOutlinedIcon","RefreshOutlinedIcon","BASE_URL","mapAttachment","dto","resolveApiBaseUrl","base","buildAttachmentDownloadUrl","path","normalizedPath","listAttachments","entityType","entityId","apiGet","uploadAttachment","options","formData","data","axios","event","progress","deleteAttachment","id","apiDelete","attachmentsService","useCallback","useEffect","useMemo","useState","importShared","useAttachments","autoLoad","attachments","setAttachments","loading","setLoading","uploading","setUploading","uploadProgress","setUploadProgress","error","setError","deletingIds","setDeletingIds","hasValidTarget","subscribe","useWebSocketEvents","load","response","err","refresh","upload","file","attachment","prev","remove","next","evtEntityType","evtEntityId","useRef","formatFileSize","bytes","units","size","unitIndex","formatTimestamp","value","AttachmentUploader","title","accept","fileInputRef","actionError","setActionError","hasProgress","handleSelectFile","handleDelete","handleTriggerUpload","jsxs","Card","jsx","CardHeader","Tooltip","IconButton","CircularProgress","Divider","CardContent","Stack","Button","Box","Typography","LinearProgress","Alert","CardActions","List","downloadUrl","ListItem","ListItemText","mapComment","toCreateRequest","payload","toUpdateRequest","listComments","params","createComment","apiPost","updateComment","apiPatch","deleteComment","commentsService","useComments","comments","setComments","total","setTotal","isCreating","setIsCreating","updatingIds","setUpdatingIds","handleResponse","create","input","created","update","updated","comment","CommentsPanel","draft","setDraft","submitError","setSubmitError","canSubmit","handleSubmit","TextField","Avatar","ListItemAvatar","getEventIcon","type","IconX","IconFileInvoice","IconCheck","IconAlertCircle","getEventTitle","word","getEventDescription","date","eventDate","now","diffMs","diffMins","diffHours","diffDays","ActivityTimeline","events","onRetry","Icon","color","bgcolor","description","timestamp","Fragment","API_BASE_URL","listJourneyEvents","item","createJourneyEvent","journeyApi","useJourneyEvents","setEvents","loadEvents","addEvent","fullDto","newEvent","e"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}