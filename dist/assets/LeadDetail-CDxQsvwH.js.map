{"version":3,"file":"LeadDetail-CDxQsvwH.js","sources":["../../src/views/leads/LeadDetail.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState, type ReactElement } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Grid from '@mui/material/GridLegacy';\nimport Tab from '@mui/material/Tab';\nimport Tabs from '@mui/material/Tabs';\nimport Typography from '@mui/material/Typography';\nimport { isAxiosError } from 'axios';\n\nimport AttachmentUploader from 'ui-component/Attachments/AttachmentUploader';\nimport CommentsPanel from 'ui-component/Comments/CommentsPanel';\nimport MainCard from 'ui-component/cards/MainCard';\nimport ActivityTimeline from 'ui-component/ActivityTimeline/ActivityTimeline';\nimport { leadsApi } from 'services/leads';\nimport { useJourneyEvents } from 'hooks/useJourneyEvents';\nimport type { Lead } from 'types/api';\n\ntype LeadDetailTab = 'summary' | 'activity' | 'comments' | 'attachments';\n\ntype LoadError = { kind: 'not-found'; message: string } | { kind: 'network'; message: string };\n\nfunction formatDate(value?: string | null) {\n  if (!value) {\n    return '—';\n  }\n\n  return new Intl.DateTimeFormat(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).format(new Date(value));\n}\n\nfunction formatScore(score?: number | null) {\n  if (score === null || score === undefined || Number.isNaN(score)) {\n    return '—';\n  }\n\n  return `${Math.round(score)}%`;\n}\n\nfunction isValidLeadId(value: string | undefined): value is string {\n  if (!value) return false;\n  const uuidPattern =\n    /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\n  const numericPattern = /^\\d+$/;\n  return uuidPattern.test(value) || numericPattern.test(value);\n}\n\nexport default function LeadDetail(): ReactElement {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n\n  const [lead, setLead] = useState<Lead | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<LoadError | null>(null);\n  const [tab, setTab] = useState<LeadDetailTab>('summary');\n\n  // Journey events for activity timeline\n  const journeyEvents = useJourneyEvents({\n    entityType: 'lead',\n    entityId: id || ''\n  });\n\n  const loadLead = useCallback(async () => {\n    if (!isValidLeadId(id)) {\n      setError({\n        kind: 'not-found',\n        message: 'The requested lead could not be found.'\n      });\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const result = await leadsApi.getLead(id);\n      setLead(result);\n      setError(null);\n    } catch (err) {\n      if (isAxiosError(err)) {\n        if (err.response?.status === 404) {\n          setError({\n            kind: 'not-found',\n            message: 'The requested lead could not be found.'\n          });\n        } else {\n          setError({\n            kind: 'network',\n            message:\n              err.response?.data?.message ??\n              'We could not load this lead. Please try again in a moment.'\n          });\n        }\n      } else {\n        setError({\n          kind: 'network',\n          message: 'We could not load this lead. Please try again in a moment.'\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    void loadLead();\n  }, [loadLead]);\n\n  const statusColor = useMemo<'default' | 'success' | 'error' | 'info'>(() => {\n    const status = lead?.status?.toLowerCase();\n    switch (status) {\n      case 'converted':\n      case 'qualified':\n        return 'success';\n      case 'unqualified':\n        return 'error';\n      case 'working':\n      case 'contacted':\n        return 'info';\n      default:\n        return 'default';\n    }\n  }, [lead?.status]);\n\n  const summary = useMemo(() => {\n    if (!lead) {\n      return null;\n    }\n\n    return (\n      <Grid container spacing={2}>\n        <Grid xs={12} sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n          <Typography variant=\"h4\">\n            {lead.firstName} {lead.lastName}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Lead ID: {lead.id}\n          </Typography>\n        </Grid>\n\n        <Grid xs={12} md={6}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Email\n          </Typography>\n          <Typography variant=\"body1\">{lead.email}</Typography>\n        </Grid>\n\n        <Grid xs={12} md={6}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Phone\n          </Typography>\n          <Typography variant=\"body1\">{lead.phone ?? '—'}</Typography>\n        </Grid>\n\n        <Grid xs={12} md={6}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Company\n          </Typography>\n          <Typography variant=\"body1\">{lead.company ?? '—'}</Typography>\n        </Grid>\n\n        <Grid xs={12} md={6} sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Status\n          </Typography>\n          <Chip label={lead.status ?? '—'} color={statusColor} size=\"small\" />\n        </Grid>\n\n        <Grid xs={12} md={6}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Source\n          </Typography>\n          <Typography variant=\"body1\">{lead.source ?? '—'}</Typography>\n        </Grid>\n\n        <Grid xs={12} md={6}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Lead Score\n          </Typography>\n          <Typography variant=\"body1\">{formatScore(lead.score)}</Typography>\n        </Grid>\n\n        <Grid xs={12} md={6}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Owner\n          </Typography>\n          <Typography variant=\"body1\">{lead.ownerId}</Typography>\n        </Grid>\n\n        <Grid xs={12} md={6}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Updated At\n          </Typography>\n          <Typography variant=\"body1\">{formatDate(lead.updatedAt)}</Typography>\n        </Grid>\n\n        <Grid xs={12}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\n            Notes\n          </Typography>\n          <Typography variant=\"body1\">{lead.notes ?? '—'}</Typography>\n        </Grid>\n      </Grid>\n    );\n  }, [lead, statusColor]);\n\n  const activityContent = (\n    <Box sx={{ p: 3 }}>\n      <ActivityTimeline\n        events={journeyEvents.events}\n        loading={journeyEvents.loading}\n        error={journeyEvents.error}\n        onRetry={journeyEvents.refresh}\n      />\n    </Box>\n  );\n\n  const isCommentsTabDisabled = !id;\n  const isAttachmentsTabDisabled = !id;\n\n  return (\n    <MainCard\n      title=\"Lead Details\"\n      secondary={\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Button variant=\"outlined\" onClick={() => navigate(-1)}>\n            Back\n          </Button>\n          {id && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => navigate(`/leads/${id}/edit`)}\n            >\n              Edit Lead\n            </Button>\n          )}\n        </Box>\n      }\n    >\n      <Tabs\n        value={tab}\n        onChange={(_, value: LeadDetailTab) => setTab(value)}\n        variant=\"scrollable\"\n        allowScrollButtonsMobile\n        sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}`, mb: 2 }}\n      >\n        <Tab label=\"Summary\" value=\"summary\" />\n        <Tab label=\"Activity\" value=\"activity\" />\n        <Tab label=\"Comments\" value=\"comments\" disabled={isCommentsTabDisabled} />\n        <Tab label=\"Attachments\" value=\"attachments\" disabled={isAttachmentsTabDisabled} />\n      </Tabs>\n\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 6 }}>\n          <CircularProgress />\n        </Box>\n      )}\n\n      {!loading && error && (\n        <Alert severity={error.kind === 'network' ? 'error' : 'warning'}>\n          <Typography variant=\"body2\" sx={{ mb: 1 }}>\n            {error.message}\n          </Typography>\n          <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n            {error.kind === 'network' && (\n              <Button size=\"small\" onClick={() => void loadLead()} variant=\"outlined\">\n                Retry\n              </Button>\n            )}\n            <Button size=\"small\" variant=\"contained\" onClick={() => navigate('/leads')}>\n              Back to Leads\n            </Button>\n          </Box>\n        </Alert>\n      )}\n\n      {!loading && !error && lead && (\n        <Box>\n          {tab === 'summary' && summary}\n          {tab === 'activity' && activityContent}\n          {tab === 'comments' && id && (\n            <CommentsPanel entityType=\"lead\" entityId={id} title=\"Comments\" />\n          )}\n          {tab === 'attachments' && id && (\n            <AttachmentUploader entityType=\"lead\" entityId={id} title=\"Attachments\" />\n          )}\n        </Box>\n      )}\n\n      {!loading && !error && !lead && (\n        <Box sx={{ py: 4 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"center\">\n            We could not find details for this lead.\n          </Typography>\n        </Box>\n      )}\n    </MainCard>\n  );\n}\n"],"names":["useCallback","useEffect","useMemo","useState","importShared","useNavigate","useParams","formatDate","value","formatScore","score","isValidLeadId","uuidPattern","numericPattern","LeadDetail","id","navigate","lead","setLead","loading","setLoading","error","setError","tab","setTab","journeyEvents","useJourneyEvents","loadLead","result","leadsApi","err","isAxiosError","statusColor","summary","jsxs","Grid","Typography","jsx","Chip","activityContent","Box","ActivityTimeline","isCommentsTabDisabled","isAttachmentsTabDisabled","MainCard","Button","Tabs","_","theme","Tab","CircularProgress","Alert","CommentsPanel","AttachmentUploader"],"mappings":"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"}