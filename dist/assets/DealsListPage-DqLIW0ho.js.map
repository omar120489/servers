{"version":3,"file":"DealsListPage-DqLIW0ho.js","sources":["../../src/hooks/useDeals.ts","../../src/views/pages/deals/DealsListPage.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { dealsApi } from 'services/deals';\nimport type { Deal, DealQuery, PaginatedResponse } from 'types/api';\n\nconst DEFAULT_QUERY: DealQuery = {\n  page: 1,\n  size: 10,\n  search: ''\n};\n\ninterface UseDealsOptions {\n  initialQuery?: DealQuery;\n}\n\ninterface UseDealsResult {\n  deals: Deal[];\n  data: PaginatedResponse<Deal> | null;\n  loading: boolean;\n  error: unknown;\n  query: DealQuery;\n  updateQuery: (patch: Partial<DealQuery>) => void;\n  setQuery: (updater: (prev: DealQuery) => DealQuery) => void;\n  refetch: () => Promise<void>;\n}\n\nexport function useDeals(options?: UseDealsOptions): UseDealsResult {\n  const [query, setQueryState] = useState<DealQuery>(() => ({\n    ...DEFAULT_QUERY,\n    ...(options?.initialQuery ?? {})\n  }));\n  const [data, setData] = useState<PaginatedResponse<Deal> | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<unknown>(null);\n\n  const effectiveQuery = useMemo(\n    () => ({\n      ...DEFAULT_QUERY,\n      ...query\n    }),\n    [query]\n  );\n\n  const execute = useCallback(async (params: DealQuery) => {\n    const result = await dealsApi.listDeals(params);\n    setData(result);\n    setError(null);\n  }, []);\n\n  const loadDeals = useCallback(\n    async (params: DealQuery) => {\n      setLoading(true);\n      try {\n        await execute(params);\n      } catch (err) {\n        setError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [execute]\n  );\n\n  useEffect(() => {\n    let active = true;\n    setLoading(true);\n    dealsApi\n      .listDeals(effectiveQuery)\n      .then((result) => {\n        if (!active) return;\n        setData(result);\n        setError(null);\n      })\n      .catch((err) => {\n        if (!active) return;\n        setError(err);\n      })\n      .finally(() => {\n        if (!active) return;\n        setLoading(false);\n      });\n\n    return () => {\n      active = false;\n    };\n  }, [effectiveQuery]);\n\n  const updateQuery = useCallback((patch: Partial<DealQuery>) => {\n    setQueryState((prev) => ({\n      ...prev,\n      ...patch\n    }));\n  }, []);\n\n  const setQuery = useCallback((updater: (prev: DealQuery) => DealQuery) => {\n    setQueryState((prev) => ({\n      ...prev,\n      ...updater(prev)\n    }));\n  }, []);\n\n  const refetch = useCallback(async () => {\n    await loadDeals(effectiveQuery);\n  }, [loadDeals, effectiveQuery]);\n\n  return {\n    deals: data?.items ?? [],\n    data,\n    loading,\n    error,\n    query: effectiveQuery,\n    updateQuery,\n    setQuery,\n    refetch\n  };\n}\n\nexport default useDeals;\n","import { useCallback, useMemo, useState, type ReactNode } from 'react';\nimport { Link as RouterLink, useSearchParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Alert from '@mui/material/Alert';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport SearchIcon from '@mui/icons-material/Search';\nimport {\n  DataGrid,\n  type GridColDef,\n  type GridPaginationModel,\n  type GridRenderCellParams\n} from '@mui/x-data-grid';\nimport { useSnackbar } from 'notistack';\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport ExportMenu from 'ui-component/ExportMenu';\nimport { FilterPanel, type FilterConfig, type FilterValues } from 'ui-component/FilterPanel';\nimport { useDeals } from 'hooks/useDeals';\nimport { useFilterPresets } from 'hooks/useFilterPresets';\nimport type { Deal, DealQuery } from 'types/api';\nimport {\n  exportToXLSX,\n  exportToPDF,\n  buildExportFilename,\n  formatCurrencyForExport,\n  formatDateForExport,\n  type ExportColumn\n} from 'utils/exporters';\n\nconst DEFAULT_PAGE_SIZE = 10;\n\nfunction formatCurrency(value?: number | null) {\n  if (value === null || value === undefined || Number.isNaN(value)) {\n    return '—';\n  }\n\n  return new Intl.NumberFormat(undefined, {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0\n  }).format(value);\n}\n\nfunction formatProbability(value?: number | null) {\n  if (value === null || value === undefined) {\n    return '—';\n  }\n\n  const display = value > 1 ? value : value * 100;\n  return `${Math.round(display)}%`;\n}\n\nfunction formatDate(value?: string | null) {\n  if (!value) {\n    return '—';\n  }\n\n  return new Intl.DateTimeFormat(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).format(new Date(value));\n}\n\nfunction getStatusColor(\n  status?: string | null\n): 'default' | 'success' | 'warning' | 'error' | 'info' {\n  if (!status) {\n    return 'default';\n  }\n\n  const normalized = status.toLowerCase();\n  if (normalized.includes('won')) return 'success';\n  if (normalized.includes('lost')) return 'error';\n  if (normalized.includes('hold') || normalized.includes('pending')) return 'warning';\n  if (normalized.includes('negotiation') || normalized.includes('proposal')) return 'info';\n  return 'default';\n}\n\n// Filter configuration for deals\nconst DEAL_FILTER_CONFIG: FilterConfig[] = [\n  {\n    label: 'Close Date',\n    type: 'date-range',\n    field: 'date'\n  },\n  {\n    label: 'Amount',\n    type: 'number-range',\n    field: 'amount'\n  },\n  {\n    label: 'Stages',\n    type: 'multi-select',\n    field: 'stages',\n    options: [\n      { value: 'Lead', label: 'Lead' },\n      { value: 'Qualified', label: 'Qualified' },\n      { value: 'Proposal', label: 'Proposal' },\n      { value: 'Negotiation', label: 'Negotiation' },\n      { value: 'Closed Won', label: 'Closed Won' },\n      { value: 'Closed Lost', label: 'Closed Lost' }\n    ]\n  },\n  {\n    label: 'Statuses',\n    type: 'multi-select',\n    field: 'statuses',\n    options: [\n      { value: 'Open', label: 'Open' },\n      { value: 'Won', label: 'Won' },\n      { value: 'Lost', label: 'Lost' },\n      { value: 'Pending', label: 'Pending' }\n    ]\n  }\n];\n\nexport default function DealsListPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { presets, savePreset } = useFilterPresets('deals-filter-presets');\n\n  // Local filter values state\n  const [filterValues, setFilterValues] = useState<FilterValues>({});\n\n  const initialQuery = useMemo<DealQuery>(() => {\n    const getNumber = (key: string, fallback: number) => {\n      const value = Number(searchParams.get(key));\n      return Number.isFinite(value) && value > 0 ? value : fallback;\n    };\n\n    const getString = (key: string) => {\n      const value = searchParams.get(key);\n      return value && value.trim().length > 0 ? value : undefined;\n    };\n\n    const getArray = (key: string) => {\n      const value = searchParams.get(key);\n      return value ? value.split(',') : [];\n    };\n\n    // Initialize filter values from URL\n    const initialFilters: FilterValues = {\n      date_from: getString('date_from'),\n      date_to: getString('date_to'),\n      amount_min: searchParams.get('amount_min') ? Number(searchParams.get('amount_min')) : undefined,\n      amount_max: searchParams.get('amount_max') ? Number(searchParams.get('amount_max')) : undefined,\n      stages: getArray('stages'),\n      statuses: getArray('statuses')\n    };\n\n    setFilterValues(initialFilters);\n\n    return {\n      page: getNumber('page', 1),\n      size: getNumber('size', DEFAULT_PAGE_SIZE),\n      search: searchParams.get('search') ?? '',\n      date_from: getString('date_from'),\n      date_to: getString('date_to'),\n      amount_min: searchParams.get('amount_min') ? Number(searchParams.get('amount_min')) : undefined,\n      amount_max: searchParams.get('amount_max') ? Number(searchParams.get('amount_max')) : undefined,\n      stages: getString('stages'),\n      statuses: getString('statuses'),\n      stage: getString('stage') as DealQuery['stage'],\n      ownerId: getString('ownerId')\n    };\n  }, [searchParams]);\n\n  const { deals, data, loading, error, query, updateQuery, refetch } = useDeals({\n    initialQuery\n  });\n\n  const syncSearchParams = useCallback(\n    (patch: Record<string, string | undefined>) => {\n      const next = new URLSearchParams(searchParams);\n      for (const [key, value] of Object.entries(patch)) {\n        if (value === undefined || value === '') {\n          next.delete(key);\n        } else {\n          next.set(key, value);\n        }\n      }\n      setSearchParams(next);\n    },\n    [searchParams, setSearchParams]\n  );\n\n  const newDealLink: ReactNode = (\n    <Button component={RouterLink} to=\"/deals/new\" variant=\"contained\">\n      New Deal\n    </Button>\n  );\n\n  const viewReportsLink: ReactNode = (\n    <Button component={RouterLink} to=\"/reports\" size=\"small\" variant=\"text\">\n      View reports\n    </Button>\n  );\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const exportColumns: ExportColumn[] = useMemo(\n    () => [\n      { field: 'id', headerName: 'ID' },\n      { field: 'name', headerName: 'Deal Name' },\n      { field: 'amount', headerName: 'Amount', valueFormatter: formatCurrencyForExport },\n      { field: 'stage', headerName: 'Stage' },\n      { field: 'status', headerName: 'Status' },\n      { field: 'closeDate', headerName: 'Close Date', valueFormatter: formatDateForExport },\n      { field: 'ownerId', headerName: 'Owner' },\n      { field: 'grossRevenue', headerName: 'Gross Revenue', valueFormatter: formatCurrencyForExport },\n      { field: 'directCost', headerName: 'Direct Cost', valueFormatter: formatCurrencyForExport },\n      { field: 'netProfit', headerName: 'Net Profit', valueFormatter: formatCurrencyForExport },\n      { field: 'updatedAt', headerName: 'Updated', valueFormatter: formatDateForExport }\n    ],\n    []\n  );\n\n  const handleExportXLSX = useCallback(() => {\n    try {\n      const filename = buildExportFilename('deals', 'xlsx', query.search ? { search: query.search } : undefined);\n      exportToXLSX(deals, exportColumns, filename);\n      enqueueSnackbar(`Exported ${deals.length} deals to ${filename}`, { variant: 'success' });\n    } catch (error) {\n      console.error('Export failed:', error);\n      enqueueSnackbar('Export failed. Please try again.', { variant: 'error' });\n    }\n  }, [deals, exportColumns, query.search, enqueueSnackbar]);\n\n  const handleExportPDF = useCallback(() => {\n    try {\n      const filename = buildExportFilename('deals', 'pdf', query.search ? { search: query.search } : undefined);\n      exportToPDF(deals, exportColumns, filename, 'Deals Report');\n      enqueueSnackbar(`Exported ${deals.length} deals to ${filename}`, { variant: 'success' });\n    } catch (error) {\n      console.error('Export failed:', error);\n      enqueueSnackbar('Export failed. Please try again.', { variant: 'error' });\n    }\n  }, [deals, exportColumns, query.search, enqueueSnackbar]);\n\n  const paginationModel = useMemo(\n    () => ({\n      page: Math.max(0, (query.page ?? 1) - 1),\n      pageSize: query.size ?? DEFAULT_PAGE_SIZE\n    }),\n    [query.page, query.size]\n  );\n\n  const handlePaginationChange = useCallback(\n    (model: GridPaginationModel) => {\n      const nextPage = model.page + 1;\n      const nextSize = model.pageSize;\n      updateQuery({ page: nextPage, size: nextSize });\n      syncSearchParams({\n        page: String(nextPage),\n        size: String(nextSize)\n      });\n    },\n    [syncSearchParams, updateQuery]\n  );\n\n  const handleSearchChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const value = event.target.value;\n      updateQuery({ search: value, page: 1 });\n      const trimmed = value.trim();\n      syncSearchParams({\n        search: trimmed.length > 0 ? value : undefined,\n        page: '1',\n        size: String(query.size ?? DEFAULT_PAGE_SIZE)\n      });\n    },\n    [query.size, syncSearchParams, updateQuery]\n  );\n\n  const handleRefresh = useCallback(() => {\n    void refetch();\n  }, [refetch]);\n\n  // Filter handlers\n  const handleFilterChange = useCallback((values: FilterValues) => {\n    setFilterValues(values);\n  }, []);\n\n  const handleApplyFilters = useCallback(() => {\n    const patch: Record<string, string | undefined> = {\n      page: '1', // Reset to page 1 on filter change\n      date_from: filterValues.date_from as string | undefined,\n      date_to: filterValues.date_to as string | undefined,\n      amount_min: filterValues.amount_min === undefined ? undefined : String(filterValues.amount_min),\n      amount_max: filterValues.amount_max === undefined ? undefined : String(filterValues.amount_max),\n      stages: Array.isArray(filterValues.stages) && filterValues.stages.length > 0\n        ? filterValues.stages.join(',')\n        : undefined,\n      statuses: Array.isArray(filterValues.statuses) && filterValues.statuses.length > 0\n        ? filterValues.statuses.join(',')\n        : undefined\n    };\n\n    syncSearchParams(patch);\n\n    updateQuery({\n      ...query,\n      page: 1,\n      date_from: filterValues.date_from as string | undefined,\n      date_to: filterValues.date_to as string | undefined,\n      amount_min: filterValues.amount_min as number | undefined,\n      amount_max: filterValues.amount_max as number | undefined,\n      stages: Array.isArray(filterValues.stages) && filterValues.stages.length > 0\n        ? filterValues.stages.join(',')\n        : undefined,\n      statuses: Array.isArray(filterValues.statuses) && filterValues.statuses.length > 0\n        ? filterValues.statuses.join(',')\n        : undefined\n    });\n  }, [filterValues, query, syncSearchParams, updateQuery]);\n\n  const handleLoadPreset = useCallback((presetFilters: FilterValues) => {\n    setFilterValues(presetFilters);\n  }, []);\n\n  const handleClearFilters = useCallback(() => {\n    const nextSize = query.size ?? DEFAULT_PAGE_SIZE;\n    setFilterValues({});\n    updateQuery({\n      page: 1,\n      size: nextSize,\n      search: '',\n      dateFrom: undefined,\n      dateTo: undefined,\n      stage: undefined,\n      ownerId: undefined,\n      date_from: undefined,\n      date_to: undefined,\n      amount_min: undefined,\n      amount_max: undefined,\n      stages: undefined,\n      statuses: undefined\n    });\n    syncSearchParams({\n      page: '1',\n      size: String(nextSize),\n      search: undefined,\n      dateFrom: undefined,\n      dateTo: undefined,\n      stage: undefined,\n      ownerId: undefined,\n      date_from: undefined,\n      date_to: undefined,\n      amount_min: undefined,\n      amount_max: undefined,\n      stages: undefined,\n      statuses: undefined\n    });\n  }, [query.size, syncSearchParams, updateQuery]);\n\n  // Generate active filter chips\n  const activeFilterChips = useMemo(() => {\n    const chips: Array<{ key: string; label: string; onDelete: () => void }> = [];\n\n    if (query.date_from) {\n      chips.push({\n        key: 'date_from',\n        label: `From: ${query.date_from}`,\n        onDelete: () => {\n          const updated = { ...filterValues, date_from: undefined };\n          setFilterValues(updated);\n          syncSearchParams({ date_from: undefined });\n          updateQuery({ ...query, date_from: undefined });\n        }\n      });\n    }\n    if (query.date_to) {\n      chips.push({\n        key: 'date_to',\n        label: `To: ${query.date_to}`,\n        onDelete: () => {\n          const updated = { ...filterValues, date_to: undefined };\n          setFilterValues(updated);\n          syncSearchParams({ date_to: undefined });\n          updateQuery({ ...query, date_to: undefined });\n        }\n      });\n    }\n    if (query.amount_min) {\n      chips.push({\n        key: 'amount_min',\n        label: `Min: ${formatCurrency(query.amount_min)}`,\n        onDelete: () => {\n          const updated = { ...filterValues, amount_min: undefined };\n          setFilterValues(updated);\n          syncSearchParams({ amount_min: undefined });\n          updateQuery({ ...query, amount_min: undefined });\n        }\n      });\n    }\n    if (query.amount_max) {\n      chips.push({\n        key: 'amount_max',\n        label: `Max: ${formatCurrency(query.amount_max)}`,\n        onDelete: () => {\n          const updated = { ...filterValues, amount_max: undefined };\n          setFilterValues(updated);\n          syncSearchParams({ amount_max: undefined });\n          updateQuery({ ...query, amount_max: undefined });\n        }\n      });\n    }\n    if (query.stages) {\n      chips.push({\n        key: 'stages',\n        label: `Stages: ${query.stages}`,\n        onDelete: () => {\n          const updated = { ...filterValues, stages: [] };\n          setFilterValues(updated);\n          syncSearchParams({ stages: undefined });\n          updateQuery({ ...query, stages: undefined });\n        }\n      });\n    }\n    if (query.statuses) {\n      chips.push({\n        key: 'statuses',\n        label: `Statuses: ${query.statuses}`,\n        onDelete: () => {\n          const updated = { ...filterValues, statuses: [] };\n          setFilterValues(updated);\n          syncSearchParams({ statuses: undefined });\n          updateQuery({ ...query, statuses: undefined });\n        }\n      });\n    }\n\n    return chips;\n  }, [query, filterValues, syncSearchParams, updateQuery]);\n\n  const columns = useMemo<GridColDef<Deal>[]>(\n    () => [\n      {\n        field: 'name',\n        headerName: 'Deal',\n        flex: 1.2,\n        minWidth: 200,\n        renderCell: (params: GridRenderCellParams<Deal>) => (\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n            <Typography variant=\"subtitle1\" fontWeight={600} noWrap>\n              {params.row.name}\n            </Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\" noWrap>\n              Owner: {params.row.ownerId ?? '—'}\n            </Typography>\n          </Box>\n        )\n      },\n      {\n        field: 'amount',\n        headerName: 'Amount',\n        flex: 0.6,\n        minWidth: 140,\n        type: 'number',\n        renderCell: (params: GridRenderCellParams<Deal>) => (\n          <Typography variant=\"body2\" noWrap>\n            {formatCurrency(params.row.amount)}\n          </Typography>\n        )\n      },\n      {\n        field: 'stage',\n        headerName: 'Stage',\n        flex: 0.5,\n        minWidth: 140,\n        renderCell: (params: GridRenderCellParams<Deal>) => (\n          <Chip label={params.row.stage || '—'} size=\"small\" variant=\"outlined\" />\n        )\n      },\n      {\n        field: 'status',\n        headerName: 'Status',\n        flex: 0.5,\n        minWidth: 140,\n        renderCell: (params: GridRenderCellParams<Deal>) => (\n          <Chip\n            label={params.row.status || '—'}\n            size=\"small\"\n            color={getStatusColor(params.row.status)}\n          />\n        )\n      },\n      {\n        field: 'probability',\n        headerName: 'Probability',\n        flex: 0.4,\n        minWidth: 120,\n        renderCell: (params: GridRenderCellParams<Deal>) => (\n          <Typography variant=\"body2\" noWrap>\n            {formatProbability(params.row.probability)}\n          </Typography>\n        )\n      },\n      {\n        field: 'closeDate',\n        headerName: 'Close Date',\n        flex: 0.6,\n        minWidth: 150,\n        renderCell: (params: GridRenderCellParams<Deal>) => (\n          <Typography variant=\"body2\" noWrap>\n            {formatDate(params.row.closeDate)}\n          </Typography>\n        )\n      },\n      {\n        field: 'updatedAt',\n        headerName: 'Updated',\n        flex: 0.6,\n        minWidth: 150,\n        renderCell: (params: GridRenderCellParams<Deal>) => (\n          <Typography variant=\"body2\" noWrap>\n            {formatDate(params.row.updatedAt)}\n          </Typography>\n        )\n      },\n      {\n        field: 'actions',\n        headerName: 'Actions',\n        sortable: false,\n        filterable: false,\n        minWidth: 160,\n        align: 'right',\n        disableColumnMenu: true,\n        renderCell: (params: GridRenderCellParams<Deal>) => {\n          const viewLink: ReactNode = (\n            <Button component={RouterLink} to={`/deals/${params.row.id}`} size=\"small\">\n              View\n            </Button>\n          );\n\n          const editLink: ReactNode = (\n            <Button\n              component={RouterLink}\n              to={`/deals/${params.row.id}/edit`}\n              size=\"small\"\n              color=\"secondary\"\n            >\n              Edit\n            </Button>\n          );\n\n          return (\n            <Box sx={{ display: 'flex', flexDirection: 'row', gap: 1 }}>\n              {viewLink}\n              {editLink}\n            </Box>\n          );\n        }\n      }\n    ],\n    []\n  );\n\n  return (\n    <MainCard title=\"Deals\" content={false}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, p: 3 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: { xs: 'column', md: 'row' },\n            gap: 2,\n            alignItems: { xs: 'stretch', md: 'center' },\n            justifyContent: 'space-between'\n          }}\n        >\n          <TextField\n            fullWidth\n            placeholder=\"Search deals\"\n            value={query.search ?? ''}\n            onChange={handleSearchChange}\n            slotProps={{\n              input: {\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon fontSize=\"small\" />\n                  </InputAdornment>\n                )\n              }\n            }}\n          />\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 1.5,\n              justifyContent: { xs: 'flex-start', md: 'flex-end' }\n            }}\n          >\n            <ExportMenu\n              onExportXLSX={handleExportXLSX}\n              onExportPDF={handleExportPDF}\n              disabled={loading || deals.length === 0}\n            />\n            <Button\n              variant=\"outlined\"\n              startIcon={<RefreshIcon />}\n              onClick={handleRefresh}\n              disabled={loading}\n            >\n              Refresh\n            </Button>\n            {newDealLink}\n          </Box>\n        </Box>\n\n        {/* Advanced Filters Panel */}\n        <FilterPanel\n          filters={DEAL_FILTER_CONFIG}\n          values={filterValues}\n          onChange={handleFilterChange}\n          onApply={handleApplyFilters}\n          onClear={handleClearFilters}\n          showPresets={true}\n          presets={presets}\n          onSavePreset={savePreset}\n          onLoadPreset={handleLoadPreset}\n        />\n\n        {/* Active Filter Chips */}\n        {activeFilterChips.length > 0 && (\n          <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ gap: 1 }}>\n            {activeFilterChips.map((chip) => (\n              <Chip\n                key={chip.key}\n                label={chip.label}\n                onDelete={chip.onDelete}\n                color=\"primary\"\n                size=\"small\"\n              />\n            ))}\n          </Stack>\n        )}\n\n        {Boolean(error) && (\n          <Alert severity=\"error\">\n            {error instanceof Error ? error.message : 'Failed to load deals. Please try again.'}\n            {error instanceof Error && error.stack && (\n              <Typography component=\"pre\" variant=\"caption\" sx={{ mt: 1, whiteSpace: 'pre-wrap' }}>\n                {error.stack}\n              </Typography>\n            )}\n          </Alert>\n        )}\n\n        <Box sx={{ width: '100%' }}>\n          <DataGrid\n            disableColumnMenu\n            disableRowSelectionOnClick\n            rows={deals}\n            columns={columns}\n            loading={loading}\n            getRowId={(row) => row.id}\n            paginationMode=\"server\"\n            paginationModel={paginationModel}\n            onPaginationModelChange={handlePaginationChange}\n            rowCount={data?.total ?? deals.length}\n            pageSizeOptions={[5, 10, 25, 50]}\n            sx={{\n              '& .MuiDataGrid-cell': {\n                outline: 'none !important'\n              }\n            }}\n          />\n        </Box>\n\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: { xs: 'column', sm: 'row' },\n            gap: 1,\n            alignItems: { xs: 'flex-start', sm: 'center' }\n          }}\n        >\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Showing {deals.length} of {data?.total ?? 0} deals\n          </Typography>\n          <Box>{viewReportsLink}</Box>\n        </Box>\n      </Box>\n    </MainCard>\n  );\n}\n"],"names":["useCallback","useEffect","useMemo","useState","importShared","DEFAULT_QUERY","useDeals","options","query","setQueryState","data","setData","loading","setLoading","error","setError","effectiveQuery","execute","params","result","dealsApi","loadDeals","err","active","updateQuery","patch","prev","setQuery","updater","refetch","RouterLink","useSearchParams","DEFAULT_PAGE_SIZE","formatCurrency","value","formatProbability","display","formatDate","getStatusColor","status","normalized","DEAL_FILTER_CONFIG","DealsListPage","searchParams","setSearchParams","presets","savePreset","useFilterPresets","filterValues","setFilterValues","initialQuery","getNumber","key","fallback","getString","getArray","initialFilters","deals","syncSearchParams","next","newDealLink","Button","viewReportsLink","jsx","enqueueSnackbar","useSnackbar","exportColumns","formatCurrencyForExport","formatDateForExport","handleExportXLSX","filename","buildExportFilename","exportToXLSX","handleExportPDF","exportToPDF","paginationModel","handlePaginationChange","model","nextPage","nextSize","handleSearchChange","event","trimmed","handleRefresh","handleFilterChange","values","handleApplyFilters","handleLoadPreset","presetFilters","handleClearFilters","activeFilterChips","chips","updated","columns","jsxs","Box","Typography","Chip","viewLink","editLink","MainCard","TextField","InputAdornment","SearchIcon","ExportMenu","RefreshIcon","FilterPanel","Stack","chip","Alert","DataGrid","row"],"mappings":"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"}