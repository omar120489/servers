{"version":3,"file":"ThemeProviderWithVars-COWOBRnD.js","sources":["../../node_modules/@mui/private-theming/esm/useTheme/ThemeContext.js","../../node_modules/@mui/private-theming/esm/useTheme/useTheme.js","../../node_modules/@mui/private-theming/esm/ThemeProvider/nested.js","../../node_modules/@mui/private-theming/esm/ThemeProvider/ThemeProvider.js","../../node_modules/@mui/system/esm/ThemeProvider/useLayerOrder.js","../../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../../node_modules/@mui/system/esm/InitColorSchemeScript/InitColorSchemeScript.js","../../node_modules/@mui/system/esm/cssVars/localStorageManager.js","../../node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js","../../node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js","../../node_modules/@mui/material/esm/InitColorSchemeScript/InitColorSchemeScript.js","../../node_modules/@mui/material/esm/styles/ThemeProviderWithVars.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from \"./ThemeContext.js\";\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: uncomment once we enable eslint-plugin-react-compiler eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- It's not required to run React.useDebugValue in production\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport exactProp from '@mui/utils/exactProp';\nimport ThemeContext from \"../useTheme/ThemeContext.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport nested from \"./nested.js\";\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return {\n    ...outerTheme,\n    ...localTheme\n  };\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? {\n      ...localTheme\n    } : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport useId from '@mui/utils/useId';\nimport GlobalStyles from \"../GlobalStyles/index.js\";\nimport useThemeWithoutDefault from \"../useThemeWithoutDefault/index.js\";\n\n/**\n * This hook returns a `GlobalStyles` component that sets the CSS layer order (for server-side rendering).\n * Then on client-side, it injects the CSS layer order into the document head to ensure that the layer order is always present first before other Emotion styles.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function useLayerOrder(theme) {\n  const upperTheme = useThemeWithoutDefault();\n  const id = useId() || '';\n  const {\n    modularCssLayers\n  } = theme;\n  let layerOrder = 'mui.global, mui.components, mui.theme, mui.custom, mui.sx';\n  if (!modularCssLayers || upperTheme !== null) {\n    // skip this hook if upper theme exists.\n    layerOrder = '';\n  } else if (typeof modularCssLayers === 'string') {\n    layerOrder = modularCssLayers.replace(/mui(?!\\.)/g, layerOrder);\n  } else {\n    layerOrder = `@layer ${layerOrder};`;\n  }\n  useEnhancedEffect(() => {\n    const head = document.querySelector('head');\n    if (!head) {\n      return;\n    }\n    const firstChild = head.firstChild;\n    if (layerOrder) {\n      // Only insert if first child doesn't have data-mui-layer-order attribute\n      if (firstChild && firstChild.hasAttribute?.('data-mui-layer-order') && firstChild.getAttribute('data-mui-layer-order') === id) {\n        return;\n      }\n      const styleElement = document.createElement('style');\n      styleElement.setAttribute('data-mui-layer-order', id);\n      styleElement.textContent = layerOrder;\n      head.prepend(styleElement);\n    } else {\n      head.querySelector(`style[data-mui-layer-order=\"${id}\"]`)?.remove();\n    }\n  }, [layerOrder, id]);\n  if (!layerOrder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GlobalStyles, {\n    styles: layerOrder\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from \"../useThemeWithoutDefault/index.js\";\nimport RtlProvider from \"../RtlProvider/index.js\";\nimport DefaultPropsProvider from \"../DefaultPropsProvider/index.js\";\nimport useLayerOrder from \"./useLayerOrder.js\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? {\n        ...upperTheme,\n        [themeId]: mergedTheme\n      } : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? {\n      ...upperTheme,\n      [themeId]: localTheme\n    } : {\n      ...upperTheme,\n      ...localTheme\n    };\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = (themeId ? engineTheme[themeId] : engineTheme).direction === 'rtl';\n  const layerOrder = useLayerOrder(engineTheme);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: /*#__PURE__*/_jsxs(DefaultPropsProvider, {\n          value: themeId ? engineTheme[themeId].components : engineTheme.components,\n          children: [layerOrder, children]\n        })\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","/**\n * Split this component for RSC import\n */\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function InitColorSchemeScript(options) {\n  const {\n    defaultMode = 'system',\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute: initialAttribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement',\n    nonce\n  } = options || {};\n  let setter = '';\n  let attribute = initialAttribute;\n  if (initialAttribute === 'class') {\n    attribute = '.%s';\n  }\n  if (initialAttribute === 'data') {\n    attribute = '[data-%s]';\n  }\n  if (attribute.startsWith('.')) {\n    const selector = attribute.substring(1);\n    setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;\n  }\n  const matches = attribute.match(/\\[([^[\\]]+)\\]/); // case [data-color-scheme='%s'] or [data-color-scheme]\n  if (matches) {\n    const [attr, value] = matches[1].split('=');\n    if (!value) {\n      setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;\n    }\n    setter += `\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '\"\"'});`;\n  } else {\n    setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;\n  }\n  return /*#__PURE__*/_jsx(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: typeof window === 'undefined' ? nonce : ''\n    // eslint-disable-next-line react/no-danger\n    ,\n    dangerouslySetInnerHTML: {\n      __html: `(function() {\ntry {\n  let colorScheme = '';\n  const mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n  if (mode === 'system') {\n    // handle system mode\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = dark\n    } else {\n      colorScheme = light\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = light;\n  }\n  if (mode === 'dark') {\n    colorScheme = dark;\n  }\n  if (colorScheme) {\n    ${setter}\n  }\n} catch(e){}})();`\n    }\n  }, \"mui-color-scheme-init\");\n}","function noop() {}\nconst localStorageManager = ({\n  key,\n  storageWindow\n}) => {\n  if (!storageWindow && typeof window !== 'undefined') {\n    storageWindow = window;\n  }\n  return {\n    get(defaultValue) {\n      if (typeof window === 'undefined') {\n        return undefined;\n      }\n      if (!storageWindow) {\n        return defaultValue;\n      }\n      let value;\n      try {\n        value = storageWindow.localStorage.getItem(key);\n      } catch {\n        // Unsupported\n      }\n      return value || defaultValue;\n    },\n    set: value => {\n      if (storageWindow) {\n        try {\n          storageWindow.localStorage.setItem(key, value);\n        } catch {\n          // Unsupported\n        }\n      }\n    },\n    subscribe: handler => {\n      if (!storageWindow) {\n        return noop;\n      }\n      const listener = event => {\n        const value = event.newValue;\n        if (event.key === key) {\n          handler(value);\n        }\n      };\n      storageWindow.addEventListener('storage', listener);\n      return () => {\n        storageWindow.removeEventListener('storage', listener);\n      };\n    }\n  };\n};\nexport default localStorageManager;","'use client';\n\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport localStorageManager from \"./localStorageManager.js\";\nfunction noop() {}\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    storageManager = localStorageManager,\n    noSsr = false\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const isMultiSchemes = supportedColorSchemes.length > 1;\n  const modeStorage = React.useMemo(() => storageManager?.({\n    key: modeStorageKey,\n    storageWindow\n  }), [storageManager, modeStorageKey, storageWindow]);\n  const lightStorage = React.useMemo(() => storageManager?.({\n    key: `${colorSchemeStorageKey}-light`,\n    storageWindow\n  }), [storageManager, colorSchemeStorageKey, storageWindow]);\n  const darkStorage = React.useMemo(() => storageManager?.({\n    key: `${colorSchemeStorageKey}-dark`,\n    storageWindow\n  }), [storageManager, colorSchemeStorageKey, storageWindow]);\n  const [state, setState] = React.useState(() => {\n    const initialMode = modeStorage?.get(defaultMode) || defaultMode;\n    const lightColorScheme = lightStorage?.get(defaultLightColorScheme) || defaultLightColorScheme;\n    const darkColorScheme = darkStorage?.get(defaultDarkColorScheme) || defaultDarkColorScheme;\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const [isClient, setIsClient] = React.useState(noSsr || !isMultiSchemes);\n  React.useEffect(() => {\n    setIsClient(true); // to rerender the component after hydration\n  }, []);\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode ?? defaultMode;\n      modeStorage?.set(newMode);\n      return {\n        ...currentState,\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      };\n    });\n  }, [modeStorage, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        lightStorage?.set(defaultLightColorScheme);\n        darkStorage?.set(defaultDarkColorScheme);\n        return {\n          ...currentState,\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        };\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = {\n            ...currentState\n          };\n          processState(currentState, mode => {\n            if (mode === 'light') {\n              lightStorage?.set(value);\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              darkStorage?.set(value);\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = {\n          ...currentState\n        };\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            lightStorage?.set(newLightColorScheme);\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            darkStorage?.set(newDarkColorScheme);\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, lightStorage, darkStorage, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event?.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return {\n          ...currentState,\n          systemMode\n        };\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    if (typeof window.matchMedia !== 'function' || !isMultiSchemes) {\n      return undefined;\n    }\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, [isMultiSchemes]);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (isMultiSchemes) {\n      const unsubscribeMode = modeStorage?.subscribe(value => {\n        if (!value || ['light', 'dark', 'system'].includes(value)) {\n          setMode(value || defaultMode);\n        }\n      }) || noop;\n      const unsubscribeLight = lightStorage?.subscribe(value => {\n        if (!value || joinedColorSchemes.match(value)) {\n          setColorScheme({\n            light: value\n          });\n        }\n      }) || noop;\n      const unsubscribeDark = darkStorage?.subscribe(value => {\n        if (!value || joinedColorSchemes.match(value)) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }) || noop;\n      return () => {\n        unsubscribeMode();\n        unsubscribeLight();\n        unsubscribeDark();\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, joinedColorSchemes, defaultMode, storageWindow, isMultiSchemes, modeStorage, lightStorage, darkStorage]);\n  return {\n    ...state,\n    mode: isClient ? state.mode : undefined,\n    systemMode: isClient ? state.systemMode : undefined,\n    colorScheme: isClient ? colorScheme : undefined,\n    setMode,\n    setColorScheme\n  };\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport ThemeProvider from \"../ThemeProvider/index.js\";\nimport InitColorSchemeScript, { DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport useCurrentColorScheme from \"./useCurrentColorScheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    defaultColorScheme,\n    resolveTheme\n  } = options;\n  const defaultContext = {\n    allColorSchemes: [],\n    colorScheme: undefined,\n    darkColorScheme: undefined,\n    lightColorScheme: undefined,\n    mode: undefined,\n    setColorScheme: () => {},\n    setMode: () => {},\n    systemMode: undefined\n  };\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\n  }\n  const useColorScheme = () => React.useContext(ColorSchemeContext) || defaultContext;\n  const defaultColorSchemes = {};\n  const defaultComponents = {};\n  function CssVarsProvider(props) {\n    const {\n      children,\n      theme: themeProp,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageManager,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false,\n      defaultMode: initialMode = 'system',\n      forceThemeRerender = false,\n      noSsr\n    } = props;\n    const hasMounted = React.useRef(false);\n    const upperTheme = muiUseTheme();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const initialTheme = React.useMemo(() => {\n      if (themeProp) {\n        return themeProp;\n      }\n      return typeof defaultTheme === 'function' ? defaultTheme() : defaultTheme;\n    }, [themeProp]);\n    const scopedTheme = initialTheme[themeId];\n    const restThemeProp = scopedTheme || initialTheme;\n    const {\n      colorSchemes = defaultColorSchemes,\n      components = defaultComponents,\n      cssVarPrefix\n    } = restThemeProp;\n    const joinedColorSchemes = Object.keys(colorSchemes).filter(k => !!colorSchemes[k]).join(',');\n    const allColorSchemes = React.useMemo(() => joinedColorSchemes.split(','), [joinedColorSchemes]);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const defaultMode = colorSchemes[defaultLightColorScheme] && colorSchemes[defaultDarkColorScheme] ? initialMode : colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode || restThemeProp.palette?.mode;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageManager,\n      storageWindow,\n      noSsr\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (forceThemeRerender && !restThemeProp.vars) {\n        console.warn(['MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.', 'Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution.'].join('\\n'));\n      }\n    }\n\n    // `colorScheme` is undefined on the server and hydration phase\n    let calculatedColorScheme = colorScheme || restThemeProp.defaultColorScheme;\n    if (restThemeProp.vars && !forceThemeRerender) {\n      calculatedColorScheme = restThemeProp.defaultColorScheme;\n    }\n    const memoTheme = React.useMemo(() => {\n      // 2. get the `vars` object that refers to the CSS custom properties\n      const themeVars = restThemeProp.generateThemeVars?.() || restThemeProp.vars;\n\n      // 3. Start composing the theme object\n      const theme = {\n        ...restThemeProp,\n        components,\n        colorSchemes,\n        cssVarPrefix,\n        vars: themeVars\n      };\n      if (typeof theme.generateSpacing === 'function') {\n        theme.spacing = theme.generateSpacing();\n      }\n\n      // 4. Resolve the color scheme and merge it to the theme\n      if (calculatedColorScheme) {\n        const scheme = colorSchemes[calculatedColorScheme];\n        if (scheme && typeof scheme === 'object') {\n          // 4.1 Merge the selected color scheme to the theme\n          Object.keys(scheme).forEach(schemeKey => {\n            if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n              // shallow merge the 1st level structure of the theme.\n              theme[schemeKey] = {\n                ...theme[schemeKey],\n                ...scheme[schemeKey]\n              };\n            } else {\n              theme[schemeKey] = scheme[schemeKey];\n            }\n          });\n        }\n      }\n      return resolveTheme ? resolveTheme(theme) : theme;\n    }, [restThemeProp, calculatedColorScheme, components, colorSchemes, cssVarPrefix]);\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    const colorSchemeSelector = restThemeProp.colorSchemeSelector;\n    useEnhancedEffect(() => {\n      if (colorScheme && colorSchemeNode && colorSchemeSelector && colorSchemeSelector !== 'media') {\n        const selector = colorSchemeSelector;\n        let rule = colorSchemeSelector;\n        if (selector === 'class') {\n          rule = `.%s`;\n        }\n        if (selector === 'data') {\n          rule = `[data-%s]`;\n        }\n        if (selector?.startsWith('data-') && !selector.includes('%s')) {\n          // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\"%s\"]'\n          rule = `[${selector}=\"%s\"]`;\n        }\n        if (rule.startsWith('.')) {\n          colorSchemeNode.classList.remove(...allColorSchemes.map(scheme => rule.substring(1).replace('%s', scheme)));\n          colorSchemeNode.classList.add(rule.substring(1).replace('%s', colorScheme));\n        } else {\n          const matches = rule.replace('%s', colorScheme).match(/\\[([^\\]]+)\\]/);\n          if (matches) {\n            const [attr, value] = matches[1].split('=');\n            if (!value) {\n              // for attributes like `data-theme-dark`, `data-theme-light`\n              // remove all the existing data attributes before setting the new one\n              allColorSchemes.forEach(scheme => {\n                colorSchemeNode.removeAttribute(attr.replace(colorScheme, scheme));\n              });\n            }\n            colorSchemeNode.setAttribute(attr, value ? value.replace(/\"|'/g, '') : '');\n          } else {\n            colorSchemeNode.setAttribute(rule, colorScheme);\n          }\n        }\n      }\n    }, [colorScheme, colorSchemeSelector, colorSchemeNode, allColorSchemes]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      allColorSchemes,\n      colorScheme,\n      darkColorScheme,\n      lightColorScheme,\n      mode,\n      setColorScheme,\n      setMode: process.env.NODE_ENV === 'production' ? setMode : newMode => {\n        if (memoTheme.colorSchemeSelector === 'media') {\n          console.error(['MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).', 'To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.', 'To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually'].join('\\n'));\n        }\n        setMode(newMode);\n      },\n      systemMode\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode, memoTheme.colorSchemeSelector]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || restThemeProp.cssVariables === false || nested && upperTheme?.cssVarPrefix === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(ThemeProvider, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: memoTheme,\n        children: children\n      }), shouldGenerateStyleSheet && /*#__PURE__*/_jsx(GlobalStyles, {\n        styles: memoTheme.generateStyleSheets?.() || []\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * The default mode when the storage is empty,\n     * require the theme to have `colorSchemes` with light and dark.\n     */\n    defaultMode: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: PropTypes.any,\n    /**\n     * If `true`, theme values are recalculated when the mode changes.\n     */\n    forceThemeRerender: PropTypes.bool,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.\n     * You should use this option in conjunction with `InitColorSchemeScript` component.\n     */\n    noSsr: PropTypes.bool,\n    /**\n     * The storage manager to be used for storing the mode and color scheme\n     * @default using `window.localStorage`\n     */\n    storageManager: PropTypes.func,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n  const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n  const getInitColorSchemeScript = params => InitColorSchemeScript({\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey,\n    ...params\n  });\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport SystemInitColorSchemeScript from '@mui/system/InitColorSchemeScript';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const defaultConfig = {\n  attribute: 'data-mui-color-scheme',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultLightColorScheme: 'light',\n  defaultDarkColorScheme: 'dark',\n  modeStorageKey: 'mui-mode'\n};\n/**\n *\n * Demos:\n *\n * - [InitColorSchemeScript](https://mui.com/material-ui/react-init-color-scheme-script/)\n *\n * API:\n *\n * - [InitColorSchemeScript API](https://mui.com/material-ui/api/init-color-scheme-script/)\n */\nfunction InitColorSchemeScript(props) {\n  const {\n    defaultMode = 'system',\n    defaultLightColorScheme = defaultConfig.defaultLightColorScheme,\n    defaultDarkColorScheme = defaultConfig.defaultDarkColorScheme,\n    modeStorageKey = defaultConfig.modeStorageKey,\n    colorSchemeStorageKey = defaultConfig.colorSchemeStorageKey,\n    attribute: initialAttribute = defaultConfig.attribute,\n    colorSchemeNode = 'document.documentElement',\n    nonce\n  } = props;\n  return /*#__PURE__*/_jsx(SystemInitColorSchemeScript, {\n    defaultMode: defaultMode,\n    defaultLightColorScheme: defaultLightColorScheme,\n    defaultDarkColorScheme: defaultDarkColorScheme,\n    modeStorageKey: modeStorageKey,\n    colorSchemeStorageKey: colorSchemeStorageKey,\n    attribute: initialAttribute,\n    colorSchemeNode: colorSchemeNode,\n    nonce: nonce\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? InitColorSchemeScript.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * DOM attribute for applying a color scheme.\n   * @default 'data-mui-color-scheme'\n   * @example '.mode-%s' // for class based color scheme\n   * @example '[data-mode-%s]' // for data-attribute without '='\n   */\n  attribute: PropTypes.string,\n  /**\n   * The node (provided as string) used to attach the color-scheme attribute.\n   * @default 'document.documentElement'\n   */\n  colorSchemeNode: PropTypes.string,\n  /**\n   * localStorage key used to store `colorScheme`.\n   * @default 'mui-color-scheme'\n   */\n  colorSchemeStorageKey: PropTypes.string,\n  /**\n   * The default color scheme to be used in dark mode.\n   * @default 'dark'\n   */\n  defaultDarkColorScheme: PropTypes.string,\n  /**\n   * The default color scheme to be used in light mode.\n   * @default 'light'\n   */\n  defaultLightColorScheme: PropTypes.string,\n  /**\n   * The default mode when the storage is empty (user's first visit).\n   * @default 'system'\n   */\n  defaultMode: PropTypes.oneOf(['dark', 'light', 'system']),\n  /**\n   * localStorage key used to store `mode`.\n   * @default 'mui-mode'\n   */\n  modeStorageKey: PropTypes.string,\n  /**\n   * Nonce string to pass to the inline script for CSP headers.\n   */\n  nonce: PropTypes.string\n} : void 0;\nexport default InitColorSchemeScript;","'use client';\n\nimport * as React from 'react';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport createTheme from \"./createTheme.js\";\nimport createTypography from \"./createTypography.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { defaultConfig } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst {\n  CssVarsProvider: InternalCssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  // @ts-ignore ignore module augmentation tests\n  theme: () => createTheme({\n    cssVariables: true\n  }),\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n  modeStorageKey: defaultConfig.modeStorageKey,\n  defaultColorScheme: {\n    light: defaultConfig.defaultLightColorScheme,\n    dark: defaultConfig.defaultDarkColorScheme\n  },\n  resolveTheme: theme => {\n    const newTheme = {\n      ...theme,\n      typography: createTypography(theme.palette, theme.typography)\n    };\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  }\n});\nlet warnedOnce = false;\n\n// TODO: remove in v7\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction Experimental_CssVarsProvider(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\n'));\n      warnedOnce = true;\n    }\n  }\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\n    ...props\n  });\n}\nlet warnedInitScriptOnce = false;\n\n// TODO: remove in v7\nconst getInitColorSchemeScript = params => {\n  if (!warnedInitScriptOnce) {\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\n'));\n    warnedInitScriptOnce = true;\n  }\n  return deprecatedGetInitColorSchemeScript(params);\n};\n\n/**\n * TODO: remove this export in v7\n * @deprecated\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\n *\n * You should use `ThemeProvider` and `createTheme()` instead:\n *\n * ```diff\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\n *\n * - const theme = extendTheme();\n * + const theme = createTheme({\n * +   cssVariables: true,\n * +   colorSchemes: { light: true, dark: true },\n * + });\n *\n * - <CssVarsProvider theme={theme}>\n * + <ThemeProvider theme={theme}>\n * ```\n *\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\n */\nexport const CssVarsProvider = InternalCssVarsProvider;\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };"],"names":["React","importShared","ThemeContext","useTheme","hasSymbol","nested","mergeOuterLocalTheme","outerTheme","localTheme","ThemeProvider","props","children","theme","output","_jsx","useLayerOrder","upperTheme","useThemeWithoutDefault","id","useId","modularCssLayers","layerOrder","useEnhancedEffect","head","firstChild","styleElement","GlobalStyles","EMPTY_THEME","useThemeScoping","themeId","isPrivate","resolvedTheme","mergedTheme","result","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","rtlValue","MuiThemeProvider","StyledEngineThemeContext","RtlProvider","DefaultPropsProvider","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","InitColorSchemeScript","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","modeStorageKey","colorSchemeStorageKey","initialAttribute","colorSchemeNode","nonce","setter","attribute","selector","matches","attr","value","noop","localStorageManager","key","storageWindow","defaultValue","handler","listener","event","getSystemMode","mode","processState","state","callback","getColorScheme","useCurrentColorScheme","supportedColorSchemes","storageManager","noSsr","joinedColorSchemes","isMultiSchemes","modeStorage","lightStorage","darkStorage","setState","initialMode","lightColorScheme","darkColorScheme","isClient","setIsClient","colorScheme","setMode","currentState","newMode","setColorScheme","newState","newLightColorScheme","newDarkColorScheme","handleMediaQuery","systemMode","mediaListener","args","media","unsubscribeMode","unsubscribeLight","unsubscribeDark","DISABLE_CSS_TRANSITION","createCssVarsProvider","defaultTheme","defaultModeStorageKey","defaultColorSchemeStorageKey","designSystemTransitionOnChange","defaultColorScheme","resolveTheme","defaultContext","ColorSchemeContext","useColorScheme","defaultColorSchemes","defaultComponents","CssVarsProvider","themeProp","disableTransitionOnChange","documentNode","disableNestedContext","disableStyleSheetGeneration","forceThemeRerender","hasMounted","muiUseTheme","ctx","initialTheme","scopedTheme","restThemeProp","colorSchemes","components","cssVarPrefix","k","allColorSchemes","stateMode","stateColorScheme","calculatedColorScheme","memoTheme","themeVars","scheme","schemeKey","colorSchemeSelector","rule","timer","css","contextValue","shouldGenerateStyleSheet","element","_jsxs","params","defaultConfig","SystemInitColorSchemeScript","InternalCssVarsProvider","deprecatedGetInitColorSchemeScript","THEME_ID","createTheme","newTheme","createTypography","styleFunctionSx","Experimental_CssVarsProvider","warnedInitScriptOnce","getInitColorSchemeScript"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}