{"version":3,"mappings":";kjBAAA,WAAAA,EAAA,gBAAAC,CAAA,QAAAC,EAAA,oBACA,WAAAC,EAAA,SAAAC,CAAA,QAAAF,EAAA,SAqBMG,EAA4B,CAChC,SAAU,UAAM,OAAO,kCAA+B,mGACtD,IAAK,UAAM,OAAO,kCAA0B,oGAC5C,IAAK,UAAM,OAAO,kCAA0B,uGAC5C,MAAO,UAAM,OAAO,kCAA4B,oGAChD,SAAU,IAAAC,EAAA,IAAM,OAAO,kCAA+B,sGACxD,EAEA,SAAwBC,GAAiB,CACvC,MAAMC,EAASC,EAAeC,GAAUA,EAAM,YAAY,KAAK,IAAI,CAAC,EAC9D,CAAE,WAAAC,CAAA,EAAeC,EAAA,EACjB,CAACC,EAA6BC,CAA8B,EAAIV,EAAS,IAAI,EAE7E,CAACW,CAAY,EAAId,EAAA,EACjBe,EAAYD,EAAa,IAAI,MAAM,GAAK,GAE9C,OAAAZ,EAAU,IAAM,CACd,MAAMc,EAAeD,GAAaE,EAE5BC,EAAoCd,EAA0BY,CAAY,EAEhFE,IACG,KAAMC,GAAWN,EAA+B,IAAMM,EAAO,OAAO,CAAC,EACrE,MAAOC,GAAU,CAChB,QAAQ,MAAM,iBAAiBJ,CAAY,sBAAuBI,CAAK,CACzE,CAAC,CACL,EAAG,CAACL,CAAS,CAAC,EAGZM,MAACC,EAAA,CACC,SAAAC,OAACC,EAAA,CAAM,GAAI,CAAE,eAAgB,WAAY,UAAW,SAClD,UAAAH,MAACG,EAAA,CACC,GAAI,CAAE,eAAgB,SAAU,WAAY,SAAU,UAAW,sBAEjE,SAAAD,OAACE,EAAA,CAAI,GAAI,CAAE,EAAG,CAAE,GAAI,EAAG,GAAI,GAAK,GAAI,GACjC,WAACf,SAAegB,EAAA,EAAc,EAC/BL,MAACM,EAAA,CACC,SAAAJ,OAACC,EAAA,CAAM,GAAI,CAAE,IAAK,EAAG,WAAY,SAAU,eAAgB,UACzD,UAAAH,MAACI,EAAA,CAAI,GAAI,CAAE,GAAI,GACb,SAAAJ,MAACtB,EAAA,CAAK,GAAG,IAAI,aAAW,aACtB,SAAAsB,MAACO,EAAA,EAAK,EACR,EACF,EACAL,OAACC,EAAA,CACC,GAAI,CACF,WAAY,SACZ,eAAgB,SAChB,UAAW,SACX,IAAK,GAGP,UAAAH,MAACQ,EAAA,CACC,aAAY,GACZ,QAAStB,EAAS,KAAO,KACzB,GAAI,CAAE,MAAO,kBACd,8BAGDc,MAACQ,EAAA,CAAW,QAAQ,UAAU,GAAI,CAAE,SAAU,OAAQ,UAAW,UAAY,mFAE7E,KAEFR,MAACI,EAAA,CAAI,GAAI,CAAE,MAAO,QACf,SAAAb,GAA+BS,MAACT,EAAA,EAA4B,EAC/D,QACCkB,EAAA,CAAQ,GAAI,CAAE,MAAO,GAAK,EAC3BT,MAACQ,EAAA,CACC,UAAW9B,EACX,GACEW,EACI,sBACAK,EACE,eAAeA,CAAS,GACxB,SAER,QAAQ,YACR,GAAI,CAAE,eAAgB,QACvB,qCAED,EACF,EACF,EACC,CAACL,GACAW,MAACI,EAAA,CACC,GAAI,CACF,SAAU,CAAE,GAAI,IAAK,GAAI,KACzB,OAAQ,CAAE,GAAI,IAAK,GAAI,GACvB,QAAS,CACP,SAAU,EACV,UAAW,MACb,EAGF,SAAAJ,MAACU,EAAA,CAAc,iBAAkBd,CAAA,CAAU,GAC7C,EAEJ,IAEFI,MAACI,EAAA,CAAI,GAAI,CAAE,GAAI,EAAG,GAAI,GACpB,SAAAJ,MAACW,EAAA,EAAW,EACd,GACF,EACF,CAEJ","names":["Link","useSearchParams","importShared","useEffect","useState","authForgotPasswordImports","__vitePreload","ForgotPassword","downMD","useMediaQuery","theme","isLoggedIn","useAuth","AuthForgotPasswordComponent","setAuthForgotPasswordComponent","searchParams","authParam","selectedAuth","APP_AUTH","importAuthForgotPasswordComponent","module","error","jsx","AuthWrapper1","jsxs","Stack","Box","ViewOnlyAlert","AuthCardWrapper","Logo","Typography","Divider","LoginProvider","AuthFooter"],"ignoreList":[],"sources":["../../src/views/pages/authentication/ForgotPassword.jsx"],"sourcesContent":["import { Link, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\n// project imports\nimport AuthWrapper1 from './AuthWrapper1';\nimport AuthCardWrapper from './AuthCardWrapper';\nimport ViewOnlyAlert from './ViewOnlyAlert';\nimport LoginProvider from './LoginProvider';\n\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\nimport useAuth from 'hooks/useAuth';\nimport { APP_AUTH } from 'config';\n\n// A mapping of auth types to dynamic imports for AuthForgotPassword components\nconst authForgotPasswordImports = {\n  firebase: () => import('./firebase/AuthForgotPassword'),\n  jwt: () => import('./jwt/AuthForgotPassword'),\n  aws: () => import('./aws/AuthForgotPassword'),\n  auth0: () => import('./auth0/AuthForgotPassword'),\n  supabase: () => import('./supabase/AuthForgotPassword')\n};\n\nexport default function ForgotPassword() {\n  const downMD = useMediaQuery((theme) => theme.breakpoints.down('md'));\n  const { isLoggedIn } = useAuth();\n  const [AuthForgotPasswordComponent, setAuthForgotPasswordComponent] = useState(null);\n\n  const [searchParams] = useSearchParams();\n  const authParam = searchParams.get('auth') || '';\n\n  useEffect(() => {\n    const selectedAuth = authParam || APP_AUTH;\n\n    const importAuthForgotPasswordComponent = authForgotPasswordImports[selectedAuth];\n\n    importAuthForgotPasswordComponent()\n      .then((module) => setAuthForgotPasswordComponent(() => module.default))\n      .catch((error) => {\n        console.error(`Error loading ${selectedAuth} AuthForgotPassword`, error);\n      });\n  }, [authParam]);\n\n  return (\n    <AuthWrapper1>\n      <Stack sx={{ justifyContent: 'flex-end', minHeight: '100vh' }}>\n        <Stack\n          sx={{ justifyContent: 'center', alignItems: 'center', minHeight: 'calc(100vh - 68px)' }}\n        >\n          <Box sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n            {!isLoggedIn && <ViewOnlyAlert />}\n            <AuthCardWrapper>\n              <Stack sx={{ gap: 2, alignItems: 'center', justifyContent: 'center' }}>\n                <Box sx={{ mb: 3 }}>\n                  <Link to=\"#\" aria-label=\"theme logo\">\n                    <Logo />\n                  </Link>\n                </Box>\n                <Stack\n                  sx={{\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    textAlign: 'center',\n                    gap: 2\n                  }}\n                >\n                  <Typography\n                    gutterBottom\n                    variant={downMD ? 'h3' : 'h2'}\n                    sx={{ color: 'secondary.main' }}\n                  >\n                    Forgot password?\n                  </Typography>\n                  <Typography variant=\"caption\" sx={{ fontSize: '16px', textAlign: 'center' }}>\n                    Enter your email address below and we&apos;ll send you a password reset OTP.\n                  </Typography>\n                </Stack>\n                <Box sx={{ width: '100%' }}>\n                  {AuthForgotPasswordComponent && <AuthForgotPasswordComponent />}\n                </Box>\n                <Divider sx={{ width: 1 }} />\n                <Typography\n                  component={Link}\n                  to={\n                    isLoggedIn\n                      ? '/pages/login/login3'\n                      : authParam\n                        ? `/login?auth=${authParam}`\n                        : '/login'\n                  }\n                  variant=\"subtitle1\"\n                  sx={{ textDecoration: 'none' }}\n                >\n                  Already have an account?\n                </Typography>\n              </Stack>\n            </AuthCardWrapper>\n            {!isLoggedIn && (\n              <Box\n                sx={{\n                  maxWidth: { xs: 400, lg: 475 },\n                  margin: { xs: 2.5, md: 3 },\n                  '& > *': {\n                    flexGrow: 1,\n                    flexBasis: '50%'\n                  }\n                }}\n              >\n                <LoginProvider currentLoginWith={APP_AUTH} />\n              </Box>\n            )}\n          </Box>\n        </Stack>\n        <Box sx={{ px: 3, my: 3 }}>\n          <AuthFooter />\n        </Box>\n      </Stack>\n    </AuthWrapper1>\n  );\n}\n"],"file":"ForgotPassword-DovZpZj4.js"}