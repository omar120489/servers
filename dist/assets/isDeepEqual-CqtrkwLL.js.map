{"version":3,"file":"isDeepEqual-CqtrkwLL.js","sources":["../../node_modules/reselect/dist/reselect.mjs","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/@mui/x-internals/esm/fastObjectShallowCompare/fastObjectShallowCompare.js","../../node_modules/@mui/x-internals/esm/isDeepEqual/isDeepEqual.js"],"sourcesContent":["// src/devModeChecks/identityFunctionCheck.ts\nvar runIdentityFunctionCheck = (resultFunc, inputSelectorsResults, outputSelectorResult) => {\n  if (inputSelectorsResults.length === 1 && inputSelectorsResults[0] === outputSelectorResult) {\n    let isInputSameAsOutput = false;\n    try {\n      const emptyObject = {};\n      if (resultFunc(emptyObject) === emptyObject)\n        isInputSameAsOutput = true;\n    } catch {\n    }\n    if (isInputSameAsOutput) {\n      let stack = void 0;\n      try {\n        throw new Error();\n      } catch (e) {\n        ;\n        ({ stack } = e);\n      }\n      console.warn(\n        \"The result function returned its own inputs without modification. e.g\\n`createSelector([state => state.todos], todos => todos)`\\nThis could lead to inefficient memoization and unnecessary re-renders.\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.\",\n        { stack }\n      );\n    }\n  }\n};\n\n// src/devModeChecks/inputStabilityCheck.ts\nvar runInputStabilityCheck = (inputSelectorResultsObject, options, inputSelectorArgs) => {\n  const { memoize, memoizeOptions } = options;\n  const { inputSelectorResults, inputSelectorResultsCopy } = inputSelectorResultsObject;\n  const createAnEmptyObject = memoize(() => ({}), ...memoizeOptions);\n  const areInputSelectorResultsEqual = createAnEmptyObject.apply(null, inputSelectorResults) === createAnEmptyObject.apply(null, inputSelectorResultsCopy);\n  if (!areInputSelectorResultsEqual) {\n    let stack = void 0;\n    try {\n      throw new Error();\n    } catch (e) {\n      ;\n      ({ stack } = e);\n    }\n    console.warn(\n      \"An input selector returned a different result when passed same arguments.\\nThis means your output selector will likely run more frequently than intended.\\nAvoid returning a new reference inside your input selector, e.g.\\n`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)`\",\n      {\n        arguments: inputSelectorArgs,\n        firstInputs: inputSelectorResults,\n        secondInputs: inputSelectorResultsCopy,\n        stack\n      }\n    );\n  }\n};\n\n// src/devModeChecks/setGlobalDevModeChecks.ts\nvar globalDevModeChecks = {\n  inputStabilityCheck: \"once\",\n  identityFunctionCheck: \"once\"\n};\nvar setGlobalDevModeChecks = (devModeChecks) => {\n  Object.assign(globalDevModeChecks, devModeChecks);\n};\n\n// src/utils.ts\nvar NOT_FOUND = /* @__PURE__ */ Symbol(\"NOT_FOUND\");\nfunction assertIsFunction(func, errorMessage = `expected a function, instead received ${typeof func}`) {\n  if (typeof func !== \"function\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsObject(object, errorMessage = `expected an object, instead received ${typeof object}`) {\n  if (typeof object !== \"object\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsArrayOfFunctions(array, errorMessage = `expected all items to be functions, instead received the following types: `) {\n  if (!array.every((item) => typeof item === \"function\")) {\n    const itemTypes = array.map(\n      (item) => typeof item === \"function\" ? `function ${item.name || \"unnamed\"}()` : typeof item\n    ).join(\", \");\n    throw new TypeError(`${errorMessage}[${itemTypes}]`);\n  }\n}\nvar ensureIsArray = (item) => {\n  return Array.isArray(item) ? item : [item];\n};\nfunction getDependencies(createSelectorArgs) {\n  const dependencies = Array.isArray(createSelectorArgs[0]) ? createSelectorArgs[0] : createSelectorArgs;\n  assertIsArrayOfFunctions(\n    dependencies,\n    `createSelector expects all input-selectors to be functions, but received the following types: `\n  );\n  return dependencies;\n}\nfunction collectInputSelectorResults(dependencies, inputSelectorArgs) {\n  const inputSelectorResults = [];\n  const { length } = dependencies;\n  for (let i = 0; i < length; i++) {\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs));\n  }\n  return inputSelectorResults;\n}\nvar getDevModeChecksExecutionInfo = (firstRun, devModeChecks) => {\n  const { identityFunctionCheck, inputStabilityCheck } = {\n    ...globalDevModeChecks,\n    ...devModeChecks\n  };\n  return {\n    identityFunctionCheck: {\n      shouldRun: identityFunctionCheck === \"always\" || identityFunctionCheck === \"once\" && firstRun,\n      run: runIdentityFunctionCheck\n    },\n    inputStabilityCheck: {\n      shouldRun: inputStabilityCheck === \"always\" || inputStabilityCheck === \"once\" && firstRun,\n      run: runInputStabilityCheck\n    }\n  };\n};\n\n// src/autotrackMemoize/autotracking.ts\nvar $REVISION = 0;\nvar CURRENT_TRACKER = null;\nvar Cell = class {\n  revision = $REVISION;\n  _value;\n  _lastValue;\n  _isEqual = tripleEq;\n  constructor(initialValue, isEqual = tripleEq) {\n    this._value = this._lastValue = initialValue;\n    this._isEqual = isEqual;\n  }\n  // Whenever a storage value is read, it'll add itself to the current tracker if\n  // one exists, entangling its state with that cache.\n  get value() {\n    CURRENT_TRACKER?.add(this);\n    return this._value;\n  }\n  // Whenever a storage value is updated, we bump the global revision clock,\n  // assign the revision for this storage to the new value, _and_ we schedule a\n  // rerender. This is important, and it's what makes autotracking  _pull_\n  // based. We don't actively tell the caches which depend on the storage that\n  // anything has happened. Instead, we recompute the caches when needed.\n  set value(newValue) {\n    if (this.value === newValue)\n      return;\n    this._value = newValue;\n    this.revision = ++$REVISION;\n  }\n};\nfunction tripleEq(a, b) {\n  return a === b;\n}\nvar TrackingCache = class {\n  _cachedValue;\n  _cachedRevision = -1;\n  _deps = [];\n  hits = 0;\n  fn;\n  constructor(fn) {\n    this.fn = fn;\n  }\n  clear() {\n    this._cachedValue = void 0;\n    this._cachedRevision = -1;\n    this._deps = [];\n    this.hits = 0;\n  }\n  get value() {\n    if (this.revision > this._cachedRevision) {\n      const { fn } = this;\n      const currentTracker = /* @__PURE__ */ new Set();\n      const prevTracker = CURRENT_TRACKER;\n      CURRENT_TRACKER = currentTracker;\n      this._cachedValue = fn();\n      CURRENT_TRACKER = prevTracker;\n      this.hits++;\n      this._deps = Array.from(currentTracker);\n      this._cachedRevision = this.revision;\n    }\n    CURRENT_TRACKER?.add(this);\n    return this._cachedValue;\n  }\n  get revision() {\n    return Math.max(...this._deps.map((d) => d.revision), 0);\n  }\n};\nfunction getValue(cell) {\n  if (!(cell instanceof Cell)) {\n    console.warn(\"Not a valid cell! \", cell);\n  }\n  return cell.value;\n}\nfunction setValue(storage, value) {\n  if (!(storage instanceof Cell)) {\n    throw new TypeError(\n      \"setValue must be passed a tracked store created with `createStorage`.\"\n    );\n  }\n  storage.value = storage._lastValue = value;\n}\nfunction createCell(initialValue, isEqual = tripleEq) {\n  return new Cell(initialValue, isEqual);\n}\nfunction createCache(fn) {\n  assertIsFunction(\n    fn,\n    \"the first parameter to `createCache` must be a function\"\n  );\n  return new TrackingCache(fn);\n}\n\n// src/autotrackMemoize/tracking.ts\nvar neverEq = (a, b) => false;\nfunction createTag() {\n  return createCell(null, neverEq);\n}\nfunction dirtyTag(tag, value) {\n  setValue(tag, value);\n}\nvar consumeCollection = (node) => {\n  let tag = node.collectionTag;\n  if (tag === null) {\n    tag = node.collectionTag = createTag();\n  }\n  getValue(tag);\n};\nvar dirtyCollection = (node) => {\n  const tag = node.collectionTag;\n  if (tag !== null) {\n    dirtyTag(tag, null);\n  }\n};\n\n// src/autotrackMemoize/proxy.ts\nvar REDUX_PROXY_LABEL = Symbol();\nvar nextId = 0;\nvar proto = Object.getPrototypeOf({});\nvar ObjectTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    this.value = value;\n    this.tag.value = value;\n  }\n  proxy = new Proxy(this, objectProxyHandler);\n  tag = createTag();\n  tags = {};\n  children = {};\n  collectionTag = null;\n  id = nextId++;\n};\nvar objectProxyHandler = {\n  get(node, key) {\n    function calculateResult() {\n      const { value } = node;\n      const childValue = Reflect.get(value, key);\n      if (typeof key === \"symbol\") {\n        return childValue;\n      }\n      if (key in proto) {\n        return childValue;\n      }\n      if (typeof childValue === \"object\" && childValue !== null) {\n        let childNode = node.children[key];\n        if (childNode === void 0) {\n          childNode = node.children[key] = createNode(childValue);\n        }\n        if (childNode.tag) {\n          getValue(childNode.tag);\n        }\n        return childNode.proxy;\n      } else {\n        let tag = node.tags[key];\n        if (tag === void 0) {\n          tag = node.tags[key] = createTag();\n          tag.value = childValue;\n        }\n        getValue(tag);\n        return childValue;\n      }\n    }\n    const res = calculateResult();\n    return res;\n  },\n  ownKeys(node) {\n    consumeCollection(node);\n    return Reflect.ownKeys(node.value);\n  },\n  getOwnPropertyDescriptor(node, prop) {\n    return Reflect.getOwnPropertyDescriptor(node.value, prop);\n  },\n  has(node, prop) {\n    return Reflect.has(node.value, prop);\n  }\n};\nvar ArrayTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    this.value = value;\n    this.tag.value = value;\n  }\n  proxy = new Proxy([this], arrayProxyHandler);\n  tag = createTag();\n  tags = {};\n  children = {};\n  collectionTag = null;\n  id = nextId++;\n};\nvar arrayProxyHandler = {\n  get([node], key) {\n    if (key === \"length\") {\n      consumeCollection(node);\n    }\n    return objectProxyHandler.get(node, key);\n  },\n  ownKeys([node]) {\n    return objectProxyHandler.ownKeys(node);\n  },\n  getOwnPropertyDescriptor([node], prop) {\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop);\n  },\n  has([node], prop) {\n    return objectProxyHandler.has(node, prop);\n  }\n};\nfunction createNode(value) {\n  if (Array.isArray(value)) {\n    return new ArrayTreeNode(value);\n  }\n  return new ObjectTreeNode(value);\n}\nfunction updateNode(node, newValue) {\n  const { value, tags, children } = node;\n  node.value = newValue;\n  if (Array.isArray(value) && Array.isArray(newValue) && value.length !== newValue.length) {\n    dirtyCollection(node);\n  } else {\n    if (value !== newValue) {\n      let oldKeysSize = 0;\n      let newKeysSize = 0;\n      let anyKeysAdded = false;\n      for (const _key in value) {\n        oldKeysSize++;\n      }\n      for (const key in newValue) {\n        newKeysSize++;\n        if (!(key in value)) {\n          anyKeysAdded = true;\n          break;\n        }\n      }\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize;\n      if (isDifferent) {\n        dirtyCollection(node);\n      }\n    }\n  }\n  for (const key in tags) {\n    const childValue = value[key];\n    const newChildValue = newValue[key];\n    if (childValue !== newChildValue) {\n      dirtyCollection(node);\n      dirtyTag(tags[key], newChildValue);\n    }\n    if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      delete tags[key];\n    }\n  }\n  for (const key in children) {\n    const childNode = children[key];\n    const newChildValue = newValue[key];\n    const childValue = childNode.value;\n    if (childValue === newChildValue) {\n      continue;\n    } else if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      updateNode(childNode, newChildValue);\n    } else {\n      deleteNode(childNode);\n      delete children[key];\n    }\n  }\n}\nfunction deleteNode(node) {\n  if (node.tag) {\n    dirtyTag(node.tag, null);\n  }\n  dirtyCollection(node);\n  for (const key in node.tags) {\n    dirtyTag(node.tags[key], null);\n  }\n  for (const key in node.children) {\n    deleteNode(node.children[key]);\n  }\n}\n\n// src/lruMemoize.ts\nfunction createSingletonCache(equals) {\n  let entry;\n  return {\n    get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n      return NOT_FOUND;\n    },\n    put(key, value) {\n      entry = { key, value };\n    },\n    getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear() {\n      entry = void 0;\n    }\n  };\n}\nfunction createLruCache(maxSize, equals) {\n  let entries = [];\n  function get(key) {\n    const cacheIndex = entries.findIndex((entry) => equals(key, entry.key));\n    if (cacheIndex > -1) {\n      const entry = entries[cacheIndex];\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n      return entry.value;\n    }\n    return NOT_FOUND;\n  }\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      entries.unshift({ key, value });\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n  function getEntries() {\n    return entries;\n  }\n  function clear() {\n    entries = [];\n  }\n  return { get, put, getEntries, clear };\n}\nvar referenceEqualityCheck = (a, b) => a === b;\nfunction createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    }\n    const { length } = prev;\n    for (let i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\nfunction lruMemoize(func, equalityCheckOrOptions) {\n  const providedOptions = typeof equalityCheckOrOptions === \"object\" ? equalityCheckOrOptions : { equalityCheck: equalityCheckOrOptions };\n  const {\n    equalityCheck = referenceEqualityCheck,\n    maxSize = 1,\n    resultEqualityCheck\n  } = providedOptions;\n  const comparator = createCacheKeyComparator(equalityCheck);\n  let resultsCount = 0;\n  const cache = maxSize <= 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator);\n  function memoized() {\n    let value = cache.get(arguments);\n    if (value === NOT_FOUND) {\n      value = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const entries = cache.getEntries();\n        const matchingEntry = entries.find(\n          (entry) => resultEqualityCheck(entry.value, value)\n        );\n        if (matchingEntry) {\n          value = matchingEntry.value;\n          resultsCount !== 0 && resultsCount--;\n        }\n      }\n      cache.put(arguments, value);\n    }\n    return value;\n  }\n  memoized.clearCache = () => {\n    cache.clear();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/autotrackMemoize/autotrackMemoize.ts\nfunction autotrackMemoize(func) {\n  const node = createNode(\n    []\n  );\n  let lastArgs = null;\n  const shallowEqual = createCacheKeyComparator(referenceEqualityCheck);\n  const cache = createCache(() => {\n    const res = func.apply(null, node.proxy);\n    return res;\n  });\n  function memoized() {\n    if (!shallowEqual(lastArgs, arguments)) {\n      updateNode(node, arguments);\n      lastArgs = arguments;\n    }\n    return cache.value;\n  }\n  memoized.clearCache = () => {\n    return cache.clear();\n  };\n  return memoized;\n}\n\n// src/weakMapMemoize.ts\nvar StrongRef = class {\n  constructor(value) {\n    this.value = value;\n  }\n  deref() {\n    return this.value;\n  }\n};\nvar Ref = typeof WeakRef !== \"undefined\" ? WeakRef : StrongRef;\nvar UNTERMINATED = 0;\nvar TERMINATED = 1;\nfunction createCacheNode() {\n  return {\n    s: UNTERMINATED,\n    v: void 0,\n    o: null,\n    p: null\n  };\n}\nfunction weakMapMemoize(func, options = {}) {\n  let fnNode = createCacheNode();\n  const { resultEqualityCheck } = options;\n  let lastResult;\n  let resultsCount = 0;\n  function memoized() {\n    let cacheNode = fnNode;\n    const { length } = arguments;\n    for (let i = 0, l = length; i < l; i++) {\n      const arg = arguments[i];\n      if (typeof arg === \"function\" || typeof arg === \"object\" && arg !== null) {\n        let objectCache = cacheNode.o;\n        if (objectCache === null) {\n          cacheNode.o = objectCache = /* @__PURE__ */ new WeakMap();\n        }\n        const objectNode = objectCache.get(arg);\n        if (objectNode === void 0) {\n          cacheNode = createCacheNode();\n          objectCache.set(arg, cacheNode);\n        } else {\n          cacheNode = objectNode;\n        }\n      } else {\n        let primitiveCache = cacheNode.p;\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = /* @__PURE__ */ new Map();\n        }\n        const primitiveNode = primitiveCache.get(arg);\n        if (primitiveNode === void 0) {\n          cacheNode = createCacheNode();\n          primitiveCache.set(arg, cacheNode);\n        } else {\n          cacheNode = primitiveNode;\n        }\n      }\n    }\n    const terminatedNode = cacheNode;\n    let result;\n    if (cacheNode.s === TERMINATED) {\n      result = cacheNode.v;\n    } else {\n      result = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const lastResultValue = lastResult?.deref?.() ?? lastResult;\n        if (lastResultValue != null && resultEqualityCheck(lastResultValue, result)) {\n          result = lastResultValue;\n          resultsCount !== 0 && resultsCount--;\n        }\n        const needsWeakRef = typeof result === \"object\" && result !== null || typeof result === \"function\";\n        lastResult = needsWeakRef ? new Ref(result) : result;\n      }\n    }\n    terminatedNode.s = TERMINATED;\n    terminatedNode.v = result;\n    return result;\n  }\n  memoized.clearCache = () => {\n    fnNode = createCacheNode();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/createSelectorCreator.ts\nfunction createSelectorCreator(memoizeOrOptions, ...memoizeOptionsFromArgs) {\n  const createSelectorCreatorOptions = typeof memoizeOrOptions === \"function\" ? {\n    memoize: memoizeOrOptions,\n    memoizeOptions: memoizeOptionsFromArgs\n  } : memoizeOrOptions;\n  const createSelector2 = (...createSelectorArgs) => {\n    let recomputations = 0;\n    let dependencyRecomputations = 0;\n    let lastResult;\n    let directlyPassedOptions = {};\n    let resultFunc = createSelectorArgs.pop();\n    if (typeof resultFunc === \"object\") {\n      directlyPassedOptions = resultFunc;\n      resultFunc = createSelectorArgs.pop();\n    }\n    assertIsFunction(\n      resultFunc,\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\n    );\n    const combinedOptions = {\n      ...createSelectorCreatorOptions,\n      ...directlyPassedOptions\n    };\n    const {\n      memoize,\n      memoizeOptions = [],\n      argsMemoize = weakMapMemoize,\n      argsMemoizeOptions = [],\n      devModeChecks = {}\n    } = combinedOptions;\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions);\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions);\n    const dependencies = getDependencies(createSelectorArgs);\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\n      recomputations++;\n      return resultFunc.apply(\n        null,\n        arguments\n      );\n    }, ...finalMemoizeOptions);\n    let firstRun = true;\n    const selector = argsMemoize(function dependenciesChecker() {\n      dependencyRecomputations++;\n      const inputSelectorResults = collectInputSelectorResults(\n        dependencies,\n        arguments\n      );\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults);\n      if (process.env.NODE_ENV !== \"production\") {\n        const { identityFunctionCheck, inputStabilityCheck } = getDevModeChecksExecutionInfo(firstRun, devModeChecks);\n        if (identityFunctionCheck.shouldRun) {\n          identityFunctionCheck.run(\n            resultFunc,\n            inputSelectorResults,\n            lastResult\n          );\n        }\n        if (inputStabilityCheck.shouldRun) {\n          const inputSelectorResultsCopy = collectInputSelectorResults(\n            dependencies,\n            arguments\n          );\n          inputStabilityCheck.run(\n            { inputSelectorResults, inputSelectorResultsCopy },\n            { memoize, memoizeOptions: finalMemoizeOptions },\n            arguments\n          );\n        }\n        if (firstRun)\n          firstRun = false;\n      }\n      return lastResult;\n    }, ...finalArgsMemoizeOptions);\n    return Object.assign(selector, {\n      resultFunc,\n      memoizedResultFunc,\n      dependencies,\n      dependencyRecomputations: () => dependencyRecomputations,\n      resetDependencyRecomputations: () => {\n        dependencyRecomputations = 0;\n      },\n      lastResult: () => lastResult,\n      recomputations: () => recomputations,\n      resetRecomputations: () => {\n        recomputations = 0;\n      },\n      memoize,\n      argsMemoize\n    });\n  };\n  Object.assign(createSelector2, {\n    withTypes: () => createSelector2\n  });\n  return createSelector2;\n}\nvar createSelector = /* @__PURE__ */ createSelectorCreator(weakMapMemoize);\n\n// src/createStructuredSelector.ts\nvar createStructuredSelector = Object.assign(\n  (inputSelectorsObject, selectorCreator = createSelector) => {\n    assertIsObject(\n      inputSelectorsObject,\n      `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof inputSelectorsObject}`\n    );\n    const inputSelectorKeys = Object.keys(inputSelectorsObject);\n    const dependencies = inputSelectorKeys.map(\n      (key) => inputSelectorsObject[key]\n    );\n    const structuredSelector = selectorCreator(\n      dependencies,\n      (...inputSelectorResults) => {\n        return inputSelectorResults.reduce((composition, value, index) => {\n          composition[inputSelectorKeys[index]] = value;\n          return composition;\n        }, {});\n      }\n    );\n    return structuredSelector;\n  },\n  { withTypes: () => createStructuredSelector }\n);\nexport {\n  createSelector,\n  createSelectorCreator,\n  createStructuredSelector,\n  lruMemoize,\n  referenceEqualityCheck,\n  setGlobalDevModeChecks,\n  autotrackMemoize as unstable_autotrackMemoize,\n  weakMapMemoize\n};\n//# sourceMappingURL=reselect.mjs.map","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","const is = Object.is;\n\n/**\n * Fast shallow compare for objects.\n * @returns true if objects are equal.\n */\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Check if two values are deeply equal.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}"],"names":["NOT_FOUND","assertIsFunction","func","errorMessage","assertIsObject","object","assertIsArrayOfFunctions","array","item","itemTypes","ensureIsArray","getDependencies","createSelectorArgs","dependencies","collectInputSelectorResults","inputSelectorArgs","inputSelectorResults","length","i","createSingletonCache","equals","entry","key","value","createLruCache","maxSize","entries","get","cacheIndex","put","getEntries","clear","referenceEqualityCheck","a","b","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","resultEqualityCheck","comparator","resultsCount","cache","memoized","matchingEntry","StrongRef","Ref","UNTERMINATED","TERMINATED","createCacheNode","weakMapMemoize","options","fnNode","lastResult","cacheNode","l","arg","objectCache","objectNode","primitiveCache","primitiveNode","terminatedNode","result","lastResultValue","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","createSelectorCreatorOptions","createSelector2","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","memoize","memoizeOptions","argsMemoize","argsMemoizeOptions","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","selector","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","inputSelectorKeys","composition","index","React","require$$0","shim","require$$1","is","x","y","objectIs","useSyncExternalStore","useRef","useEffect","useMemo","useDebugValue","withSelector_production","subscribe","getSnapshot","getServerSnapshot","isEqual","instRef","inst","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","fastObjectShallowCompare","aLength","bLength","_","isDeepEqual","entriesA","entryA","keys"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}