{"version":3,"file":"LeadsListPage-DkKo1FhD.js","sources":["../../src/hooks/useLeads.ts","../../src/views/pages/leads/LeadsListPage.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { leadsApi } from 'services/leads';\nimport type { Lead, LeadQuery, PaginatedResponse } from 'types/api';\n\nconst DEFAULT_QUERY: LeadQuery = {\n  page: 1,\n  size: 10,\n  search: ''\n};\n\ninterface UseLeadsOptions {\n  initialQuery?: LeadQuery;\n}\n\ninterface UseLeadsResult {\n  leads: Lead[];\n  data: PaginatedResponse<Lead> | null;\n  loading: boolean;\n  error: unknown;\n  query: LeadQuery;\n  updateQuery: (patch: Partial<LeadQuery>) => void;\n  setQuery: (updater: (prev: LeadQuery) => LeadQuery) => void;\n  refetch: () => Promise<void>;\n}\n\nexport function useLeads(options?: UseLeadsOptions): UseLeadsResult {\n  const [query, setQueryState] = useState<LeadQuery>(() => ({\n    ...DEFAULT_QUERY,\n    ...(options?.initialQuery ?? {})\n  }));\n  const [data, setData] = useState<PaginatedResponse<Lead> | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<unknown>(null);\n\n  const effectiveQuery = useMemo(\n    () => ({\n      ...DEFAULT_QUERY,\n      ...query\n    }),\n    [query]\n  );\n\n  const execute = useCallback(async (params: LeadQuery) => {\n    const result = await leadsApi.listLeads(params);\n    setData(result);\n    setError(null);\n  }, []);\n\n  const loadLeads = useCallback(\n    async (params: LeadQuery) => {\n      setLoading(true);\n      try {\n        await execute(params);\n      } catch (err) {\n        setError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [execute]\n  );\n\n  useEffect(() => {\n    let active = true;\n    setLoading(true);\n\n    leadsApi\n      .listLeads(effectiveQuery)\n      .then((result) => {\n        if (!active) return;\n        setData(result);\n        setError(null);\n      })\n      .catch((err) => {\n        if (!active) return;\n        setError(err);\n      })\n      .finally(() => {\n        if (!active) return;\n        setLoading(false);\n      });\n\n    return () => {\n      active = false;\n    };\n  }, [effectiveQuery]);\n\n  const updateQuery = useCallback((patch: Partial<LeadQuery>) => {\n    setQueryState((prev) => ({\n      ...prev,\n      ...patch\n    }));\n  }, []);\n\n  const setQuery = useCallback((updater: (prev: LeadQuery) => LeadQuery) => {\n    setQueryState((prev) => updater(prev));\n  }, []);\n\n  const refetch = useCallback(async () => {\n    await loadLeads(effectiveQuery);\n  }, [loadLeads, effectiveQuery]);\n\n  return {\n    leads: data?.items ?? [],\n    data,\n    loading,\n    error,\n    query: effectiveQuery,\n    updateQuery,\n    setQuery,\n    refetch\n  };\n}\n\nexport default useLeads;\n","import { useCallback, useEffect, useMemo, useState, type ReactNode } from 'react';\nimport { Link as RouterLink, useSearchParams } from 'react-router-dom';\n\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport SearchIcon from '@mui/icons-material/Search';\nimport PersonAddIcon from '@mui/icons-material/PersonAddAlt1';\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport useLeads from 'hooks/useLeads';\nimport type { Lead, LeadQuery } from 'types/api';\n\nconst STATUS_COLOR: Record<string, 'default' | 'success' | 'warning' | 'error' | 'info'> = {\n  new: 'default',\n  contacted: 'info',\n  qualified: 'success',\n  working: 'info',\n  converted: 'success',\n  unqualified: 'error'\n};\n\nfunction getStatusColor(status?: string | null) {\n  if (!status) return 'default';\n  return STATUS_COLOR[status.toLowerCase()] ?? 'default';\n}\n\nfunction formatScore(score?: number | null) {\n  if (score === undefined || score === null || Number.isNaN(score)) {\n    return '—';\n  }\n  return `${Math.round(score)}%`;\n}\n\nfunction formatDate(value?: string | null) {\n  if (!value) return '—';\n  return new Intl.DateTimeFormat(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).format(new Date(value));\n}\n\nconst INITIAL_PAGE_SIZE = 10;\n\nexport default function LeadsListPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const initialQuery = useMemo<LeadQuery>(() => {\n    const getNumber = (key: string, fallback: number) => {\n      const value = Number(searchParams.get(key));\n      return Number.isFinite(value) && value > 0 ? value : fallback;\n    };\n\n    const getString = (key: string) => {\n      const value = searchParams.get(key);\n      return value && value.trim().length > 0 ? value : undefined;\n    };\n\n    return {\n      page: getNumber('page', 1),\n      size: getNumber('size', INITIAL_PAGE_SIZE),\n      search: searchParams.get('search') ?? '',\n      dateFrom: getString('dateFrom'),\n      dateTo: getString('dateTo'),\n      ownerId: getString('ownerId')\n    };\n  }, [searchParams]);\n\n  const { leads, data, loading, error, query, updateQuery, refetch } = useLeads({\n    initialQuery\n  });\n  const [searchValue, setSearchValue] = useState(query.search ?? '');\n\n  useEffect(() => {\n    const next = query.search ?? '';\n    setSearchValue((prev) => (prev === next ? prev : next));\n  }, [query.search]);\n\n  const syncSearchParams = useCallback(\n    (patch: Record<string, string | undefined>) => {\n      const next = new URLSearchParams(searchParams);\n      Object.entries(patch).forEach(([key, value]) => {\n        if (value === undefined || value === '') {\n          next.delete(key);\n        } else {\n          next.set(key, value);\n        }\n      });\n      setSearchParams(next);\n    },\n    [searchParams, setSearchParams]\n  );\n\n  const stageFilter = useMemo(() => {\n    const value = searchParams.get('stage');\n    return value && value.trim().length > 0 ? value : undefined;\n  }, [searchParams]);\n\n  const handleChangePage = useCallback(\n    (_event: unknown, nextPage: number) => {\n      const pageNumber = nextPage + 1;\n      updateQuery({ page: pageNumber });\n      syncSearchParams({\n        page: String(pageNumber),\n        size: String(query.size ?? INITIAL_PAGE_SIZE)\n      });\n    },\n    [query.size, syncSearchParams, updateQuery]\n  );\n\n  const handleChangeRowsPerPage = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const nextSize = Number(event.target.value) || INITIAL_PAGE_SIZE;\n      updateQuery({ page: 1, size: nextSize });\n      syncSearchParams({\n        page: '1',\n        size: String(nextSize)\n      });\n    },\n    [syncSearchParams, updateQuery]\n  );\n\n  const handleSearchChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const value = event.target.value;\n      setSearchValue(value);\n      updateQuery({ page: 1, search: value });\n      const trimmed = value.trim();\n      syncSearchParams({\n        search: trimmed.length > 0 ? value : undefined,\n        page: '1',\n        size: String(query.size ?? INITIAL_PAGE_SIZE)\n      });\n    },\n    [query.size, syncSearchParams, updateQuery]\n  );\n\n  const handleRefresh = useCallback(() => {\n    void refetch();\n  }, [refetch]);\n\n  const hasFilters = useMemo(() => {\n    const searchFilter = (query.search ?? '').trim();\n    return Boolean(searchFilter || query.dateFrom || query.dateTo || query.ownerId || stageFilter);\n  }, [query.dateFrom, query.dateTo, query.ownerId, query.search, stageFilter]);\n\n  const handleClearFilters = useCallback(() => {\n    const nextSize = query.size ?? INITIAL_PAGE_SIZE;\n    updateQuery({\n      page: 1,\n      size: nextSize,\n      search: '',\n      dateFrom: undefined,\n      dateTo: undefined,\n      ownerId: undefined\n    });\n    setSearchValue('');\n    syncSearchParams({\n      page: '1',\n      size: String(nextSize),\n      search: undefined,\n      dateFrom: undefined,\n      dateTo: undefined,\n      ownerId: undefined,\n      stage: undefined\n    });\n  }, [query.size, syncSearchParams, updateQuery]);\n\n  const rows: Lead[] = useMemo(() => leads, [leads]);\n  const total = data?.total ?? rows.length;\n  const page = Math.max(0, (query.page ?? 1) - 1);\n  const pageSize = query.size ?? INITIAL_PAGE_SIZE;\n\n  const newLeadLink: ReactNode = (\n    <Button\n      component={RouterLink}\n      to=\"/leads/new\"\n      variant=\"contained\"\n      startIcon={<PersonAddIcon />}\n    >\n      New Lead\n    </Button>\n  );\n\n  return (\n    <MainCard title=\"Leads\" content={false}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, p: 3 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: { xs: 'column', md: 'row' },\n            gap: 2,\n            alignItems: { xs: 'stretch', md: 'center' },\n            justifyContent: 'space-between'\n          }}\n        >\n          <TextField\n            fullWidth\n            placeholder=\"Search leads\"\n            value={searchValue}\n            onChange={handleSearchChange}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n          />\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 1.5,\n              justifyContent: { xs: 'flex-start', md: 'flex-end' }\n            }}\n          >\n            <Button\n              variant=\"outlined\"\n              startIcon={<RefreshIcon />}\n              onClick={handleRefresh}\n              disabled={loading}\n            >\n              Refresh\n            </Button>\n            {newLeadLink}\n          </Box>\n        </Box>\n\n        {hasFilters && (\n          <Chip\n            label=\"Active filters\"\n            onDelete={handleClearFilters}\n            color=\"primary\"\n            size=\"small\"\n            sx={{ alignSelf: 'flex-start' }}\n          />\n        )}\n\n        {Boolean(error) && (\n          <Alert severity=\"error\">\n            {error instanceof Error ? error.message : 'Failed to load leads. Please try again.'}\n          </Alert>\n        )}\n\n        <Paper variant=\"outlined\">\n          {loading && <LinearProgress />}\n          <TableContainer>\n            <Table size=\"medium\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Company</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>Source</TableCell>\n                  <TableCell align=\"right\">Score</TableCell>\n                  <TableCell>Created</TableCell>\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.length === 0 && !loading ? (\n                  <TableRow>\n                    <TableCell colSpan={9} align=\"center\">\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        No leads found.\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  rows.map((lead) => (\n                    <TableRow key={lead.id} hover>\n                      <TableCell>\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                          <Typography variant=\"subtitle1\" fontWeight={600}>\n                            {lead.firstName} {lead.lastName}\n                          </Typography>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            Owner: {lead.ownerId ?? '—'}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell>{lead.email}</TableCell>\n                      <TableCell>{lead.phone ?? '—'}</TableCell>\n                      <TableCell>{lead.company ?? '—'}</TableCell>\n                      <TableCell>\n                        <Chip\n                          label={lead.status ?? '—'}\n                          size=\"small\"\n                          color={getStatusColor(lead.status)}\n                        />\n                      </TableCell>\n                      <TableCell>{lead.source ?? '—'}</TableCell>\n                      <TableCell align=\"right\">{formatScore(lead.score)}</TableCell>\n                      <TableCell>{formatDate(lead.createdAt)}</TableCell>\n                      <TableCell align=\"right\">\n                        <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\n                          <Button component={RouterLink} to={`/leads/${lead.id}`} size=\"small\">\n                            View\n                          </Button>\n                          <Button\n                            component={RouterLink}\n                            to={`/leads/${lead.id}/edit`}\n                            size=\"small\"\n                            color=\"secondary\"\n                          >\n                            Edit\n                          </Button>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            component=\"div\"\n            count={total}\n            page={page}\n            onPageChange={handleChangePage}\n            rowsPerPage={pageSize}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            rowsPerPageOptions={[5, 10, 25, 50]}\n          />\n        </Paper>\n      </Box>\n    </MainCard>\n  );\n}\n"],"names":["useCallback","useEffect","useMemo","useState","importShared","DEFAULT_QUERY","useLeads","options","query","setQueryState","data","setData","loading","setLoading","error","setError","effectiveQuery","execute","params","result","leadsApi","loadLeads","err","active","updateQuery","patch","prev","setQuery","updater","refetch","RouterLink","useSearchParams","STATUS_COLOR","getStatusColor","status","formatScore","score","formatDate","value","INITIAL_PAGE_SIZE","LeadsListPage","searchParams","setSearchParams","initialQuery","getNumber","key","fallback","getString","leads","searchValue","setSearchValue","next","syncSearchParams","stageFilter","handleChangePage","_event","nextPage","pageNumber","handleChangeRowsPerPage","event","nextSize","handleSearchChange","trimmed","handleRefresh","hasFilters","handleClearFilters","rows","total","page","pageSize","newLeadLink","jsx","Button","PersonAddIcon","MainCard","Box","jsxs","TextField","InputAdornment","SearchIcon","RefreshIcon","Chip","Alert","Paper","LinearProgress","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Typography","lead","TablePagination"],"mappings":"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"}