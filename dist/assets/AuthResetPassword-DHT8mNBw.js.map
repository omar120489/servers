{"version":3,"file":"AuthResetPassword-DHT8mNBw.js","sources":["../../src/views/pages/authentication/aws/AuthResetPassword.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport Alert from '@mui/material/Alert';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport OTPInput from 'react-otp-input';\n\n// project imports\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\nimport { dispatch } from 'store';\nimport { openSnackbar } from 'store/slices/snackbar';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport CustomFormControl from 'ui-component/extended/Form/CustomFormControl';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { IconBug } from '@tabler/icons-react';\n\n// ========================|| AWS COGNITO - RESET PASSWORD ||======================== //\n\nexport default function AuthResetPassword({ ...others }) {\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  const navigate = useNavigate();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [strength, setStrength] = useState(0);\n  const [level, setLevel] = useState();\n\n  const { awsResetPassword, isLoggedIn } = useAuth();\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const changePassword = (value) => {\n    const temp = strengthIndicator(value);\n    setStrength(temp);\n    setLevel(strengthColor(temp));\n  };\n\n  useEffect(() => {\n    changePassword('123456');\n  }, []);\n\n  const [searchParams] = useSearchParams();\n  const authParam = searchParams.get('auth');\n\n  return (\n    <Formik\n      initialValues={{\n        otp: '',\n        password: '',\n        confirmPassword: '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        otp: Yup.string().max(255).required('Verification Code is required'),\n        password: Yup.string().max(255).required('Password is required'),\n        confirmPassword: Yup.string()\n          .required('Confirm Password is required')\n          .test(\n            'confirmPassword',\n            'Both Password must be match!',\n            (confirmPassword, yup) => yup.parent.password === confirmPassword\n          )\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await awsResetPassword?.(values.otp, values.password)\n            .then(() => {\n              setSubmitting(false);\n              dispatch(\n                openSnackbar({\n                  open: true,\n                  message: 'Password Reset Successfully',\n                  variant: 'alert',\n                  alert: {\n                    color: 'success'\n                  },\n                  close: false\n                })\n              );\n              setTimeout(() => {\n                navigate(\n                  isLoggedIn ? '/auth/login' : authParam ? `/login?auth=${authParam}` : '/login',\n                  { replace: true }\n                );\n              }, 1500);\n\n              // WARNING: do not set any formik state here as formik might be already destroyed here. You may get following error by doing so.\n              // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\n              // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n              // github issue: https://github.com/formium/formik/issues/2430\n            })\n            .catch((err) => {\n              setStatus({ success: false });\n              setErrors({ submit: err });\n              setSubmitting(false);\n            });\n        } catch (err) {\n          if (scriptedRef.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n        setFieldValue\n      }) => (\n        <form noValidate onSubmit={handleSubmit} {...others}>\n          <Box sx={{ mb: 1.25 }}>\n            {touched && errors && errors.submit && (\n              <Alert severity=\"error\" icon={<IconBug />} sx={{ mb: 1 }}>\n                {errors?.submit}\n              </Alert>\n            )}\n            <Box\n              sx={{\n                '& input:focus-visible': {\n                  borderColor: `${theme.vars.palette.primary.main} !important`,\n                  boxShadow: `0px 0px 0px 1px ${theme.vars.palette.primary.main}`\n                }\n              }}\n            >\n              <OTPInput\n                value={values.otp}\n                onChange={(otp) => setFieldValue('otp', otp)}\n                numInputs={6}\n                inputType=\"tel\"\n                shouldAutoFocus\n                containerStyle={{ justifyContent: 'space-between' }}\n                inputStyle={{\n                  width: '100%',\n                  margin: '4px',\n                  padding: '16px',\n                  backgroundColor: theme.vars.palette.grey[50],\n                  border: `1px solid ${theme.vars.palette.grey[400]}`,\n                  borderRadius: 4,\n                  outline: 'none'\n                }}\n                renderInput={(props) => <input {...props} />}\n              />\n            </Box>\n            {touched.otp && errors.otp && (\n              <FormHelperText error id=\"helper-text-password-reset\">\n                {errors.otp}\n              </FormHelperText>\n            )}\n          </Box>\n          <CustomFormControl fullWidth error={Boolean(touched.password && errors.password)}>\n            <InputLabel htmlFor=\"outlined-adornment-password-reset\">Password</InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password-reset\"\n              type={showPassword ? 'text' : 'password'}\n              value={values.password}\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={(e) => {\n                handleChange(e);\n                changePassword(e.target.value);\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                    size=\"large\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </CustomFormControl>\n          {touched.password && errors.password && (\n            <FormControl fullWidth>\n              <FormHelperText error id=\"standard-weight-helper-text-reset\">\n                {errors.password}\n              </FormHelperText>\n            </FormControl>\n          )}\n          {strength !== 0 && (\n            <FormControl fullWidth>\n              <Box sx={{ mb: 2 }}>\n                <Grid container spacing={2} sx={{ alignItems: 'center' }}>\n                  <Grid>\n                    <Box\n                      sx={{ width: 85, height: 8, borderRadius: '7px', bgcolor: level?.color }}\n                    />\n                  </Grid>\n                  <Grid>\n                    <Typography variant=\"subtitle1\" sx={{ fontSize: '0.75rem' }}>\n                      {level?.label}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Box>\n            </FormControl>\n          )}\n\n          <CustomFormControl\n            fullWidth\n            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n          >\n            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-confirm-password\"\n              type=\"password\"\n              value={values.confirmPassword}\n              name=\"confirmPassword\"\n              label=\"Confirm Password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n          </CustomFormControl>\n\n          {touched.confirmPassword && errors.confirmPassword && (\n            <FormControl fullWidth>\n              <FormHelperText error id=\"standard-weight-helper-text-confirm-password\">\n                {' '}\n                {errors.confirmPassword}{' '}\n              </FormHelperText>\n            </FormControl>\n          )}\n          <Box sx={{ mt: 1 }}>\n            <AnimateButton>\n              <Button\n                disableElevation\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Reset Password\n              </Button>\n            </AnimateButton>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n"],"names":["useEffect","useState","importShared","useNavigate","useSearchParams","AuthResetPassword","others","theme","useTheme","scriptedRef","useScriptRef","navigate","showPassword","setShowPassword","strength","setStrength","level","setLevel","awsResetPassword","isLoggedIn","useAuth","handleClickShowPassword","handleMouseDownPassword","event","changePassword","value","temp","strengthIndicator","strengthColor","searchParams","authParam","jsx","Formik","Yup.object","Yup.string","confirmPassword","yup","values","setErrors","setStatus","setSubmitting","dispatch","openSnackbar","err","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setFieldValue","jsxs","Box","Alert","IconBug","OTPInput","otp","props","FormHelperText","CustomFormControl","InputLabel","OutlinedInput","e","InputAdornment","IconButton","Visibility","VisibilityOff","FormControl","Grid","Typography","AnimateButton","Button"],"mappings":"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"}