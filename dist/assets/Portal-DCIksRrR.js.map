{"version":3,"file":"Portal-DCIksRrR.js","sources":["../../node_modules/@mui/utils/esm/setRef/setRef.js","../../node_modules/@mui/utils/esm/getReactElementRef/getReactElementRef.js","../../node_modules/@mui/utils/esm/useSlotProps/useSlotProps.js","../../node_modules/@mui/material/esm/Portal/Portal.js"],"sourcesContent":["/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import * as React from 'react';\n\n/**\n * Returns the ref of a React element handling differences between React 19 and older versions.\n * It will throw runtime error if the element is not a valid React element.\n *\n * @param element React.ReactElement\n * @returns React.Ref<any> | null\n */\nexport default function getReactElementRef(element) {\n  // 'ref' is passed as prop in React 19, whereas 'ref' is directly attached to children in older versions\n  if (parseInt(React.version, 10) >= 19) {\n    return element?.props?.ref || null;\n  }\n  // @ts-expect-error element.ref is not included in the ReactElement type\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189\n  return element?.ref || null;\n}","'use client';\n\nimport useForkRef from \"../useForkRef/index.js\";\nimport appendOwnerState from \"../appendOwnerState/index.js\";\nimport mergeSlotProps from \"../mergeSlotProps/index.js\";\nimport resolveComponentProps from \"../resolveComponentProps/index.js\";\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nfunction useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...other\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...other,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}\nexport default useSlotProps;","'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport useForkRef from '@mui/utils/useForkRef';\nimport setRef from '@mui/utils/setRef';\nimport getReactElementRef from '@mui/utils/getReactElementRef';\nimport exactProp from '@mui/utils/exactProp';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/material-ui/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/material-ui/api/portal/)\n */\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  const handleRef = useForkRef(/*#__PURE__*/React.isValidElement(children) ? getReactElementRef(children) : null, forwardedRef);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return () => {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if (/*#__PURE__*/React.isValidElement(children)) {\n      const newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return children;\n  }\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport default Portal;"],"names":["setRef","ref","value","React","importShared","getReactElementRef","element","useSlotProps","parameters","elementType","externalSlotProps","ownerState","skipResolvingSlotProps","other","resolvedComponentsProps","resolveComponentProps","mergedProps","internalRef","mergeSlotProps","useForkRef","appendOwnerState","ReactDOM","getContainer","container","Portal","props","forwardedRef","children","disablePortal","mountNode","setMountNode","handleRef","useEnhancedEffect","newProps"],"mappings":"uLAae,SAASA,EAAOC,EAAKC,EAAO,CACrC,OAAOD,GAAQ,WACjBA,EAAIC,CAAK,EACAD,IACTA,EAAI,QAAUC,EAElB,CCnBA,MAAAC,EAAA,MAAAC,EAAA,OAAA,EASe,SAASC,EAAmBC,EAAS,CAElD,OAAI,SAASH,EAAM,QAAS,EAAE,GAAK,GAC1BG,GAAS,OAAO,KAAO,KAIzBA,GAAS,KAAO,IACzB,CCHA,SAASC,EAAaC,EAAY,CAChC,KAAM,CACJ,YAAAC,EACA,kBAAAC,EACA,WAAAC,EACA,uBAAAC,EAAyB,GACzB,GAAGC,CACP,EAAML,EACEM,EAA0BF,EAAyB,CAAA,EAAKG,EAAsBL,EAAmBC,CAAU,EAC3G,CACJ,MAAOK,EACP,YAAAC,CACJ,EAAMC,EAAe,CACjB,GAAGL,EACH,kBAAmBC,CACvB,CAAG,EACKb,EAAMkB,EAAWF,EAAaH,GAAyB,IAAKN,EAAW,iBAAiB,GAAG,EAKjG,OAJcY,EAAiBX,EAAa,CAC1C,GAAGO,EACH,IAAAf,CACJ,EAAKU,CAAU,CAEf,CClCA,MAAAR,EAAA,MAAAC,EAAA,OAAA,EACAiB,EAAA,MAAAjB,EAAA,WAAA,EAQA,SAASkB,EAAaC,EAAW,CAC/B,OAAO,OAAOA,GAAc,WAAaA,EAAA,EAAcA,CACzD,CAcA,MAAMC,EAAsBrB,EAAM,WAAW,SAAgBsB,EAAOC,EAAc,CAChF,KAAM,CACJ,SAAAC,EACA,UAAAJ,EACA,cAAAK,EAAgB,EAAA,EACdH,EACE,CAACI,EAAWC,CAAY,EAAI3B,EAAM,SAAS,IAAI,EAC/C4B,EAAYZ,EAAwBhB,EAAM,eAAewB,CAAQ,EAAItB,EAAmBsB,CAAQ,EAAI,KAAMD,CAAY,EAe5H,GAdAM,EAAkB,IAAM,CACjBJ,GACHE,EAAaR,EAAaC,CAAS,GAAK,SAAS,IAAI,CAEzD,EAAG,CAACA,EAAWK,CAAa,CAAC,EAC7BI,EAAkB,IAAM,CACtB,GAAIH,GAAa,CAACD,EAChB,OAAA5B,EAAO0B,EAAcG,CAAS,EACvB,IAAM,CACX7B,EAAO0B,EAAc,IAAI,CAC3B,CAGJ,EAAG,CAACA,EAAcG,EAAWD,CAAa,CAAC,EACvCA,EAAe,CACjB,GAAiBzB,EAAM,eAAewB,CAAQ,EAAG,CAC/C,MAAMM,EAAW,CACf,IAAKF,CAAA,EAEP,OAAoB5B,EAAM,aAAawB,EAAUM,CAAQ,CAC3D,CACA,OAAON,CACT,CACA,OAAOE,GAAyBR,EAAS,aAAaM,EAAUE,CAAS,CAC3E,CAAC","x_google_ignoreList":[0,1,2,3]}