{"version":3,"file":"AuthLogin-D7mwgKDB.js","sources":["../../src/views/pages/authentication/aws/AuthLogin.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\n// material-ui\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport CustomFormControl from 'ui-component/extended/Form/CustomFormControl';\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// ===============================|| AWS COGNITO - LOGIN ||=============================== //\n\nexport default function AwsCognitoLogin({ ...others }) {\n  const { login, isLoggedIn } = useAuth();\n  const scriptedRef = useScriptRef();\n\n  const [checked, setChecked] = useState(true);\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const [searchParams] = useSearchParams();\n  const authParam = searchParams.get('auth');\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'info@codedthemes.com',\n        password: '123456',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string()\n          .required('Password is required')\n          .test(\n            'no-leading-trailing-whitespace',\n            'Password can not start or end with spaces',\n            (value) => value === value.trim()\n          )\n          .max(10, 'Password must be less than 10 characters')\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          const trimmedEmail = values.email.trim();\n          await login?.(trimmedEmail, values.password);\n\n          if (scriptedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n          if (scriptedRef.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form noValidate onSubmit={handleSubmit} {...others}>\n          <CustomFormControl fullWidth error={Boolean(touched.email && errors.email)}>\n            <InputLabel htmlFor=\"outlined-adornment-email-login\">\n              Email Address / Username\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-email-login\"\n              type=\"email\"\n              value={values.email}\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n            {touched.email && errors.email && (\n              <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                {errors.email}\n              </FormHelperText>\n            )}\n          </CustomFormControl>\n\n          <CustomFormControl fullWidth error={Boolean(touched.password && errors.password)}>\n            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password-login\"\n              type={showPassword ? 'text' : 'password'}\n              value={values.password}\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                    size=\"large\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Password\"\n            />\n            {touched.password && errors.password && (\n              <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                {errors.password}\n              </FormHelperText>\n            )}\n          </CustomFormControl>\n\n          <Grid container sx={{ alignItems: 'center', justifyContent: 'space-between' }}>\n            <Grid>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={checked}\n                    onChange={(event) => setChecked(event.target.checked)}\n                    name=\"checked\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Keep me logged in\"\n              />\n            </Grid>\n            <Grid>\n              <Typography\n                variant=\"subtitle1\"\n                component={Link}\n                to={\n                  isLoggedIn\n                    ? '/pages/forgot-password/forgot-password3'\n                    : authParam\n                      ? `/forgot-password?auth=${authParam}`\n                      : '/forgot-password'\n                }\n                sx={{ textDecoration: 'none', color: 'secondary.main' }}\n              >\n                Forgot Password?\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {errors.submit && (\n            <Box sx={{ mt: 3 }}>\n              <FormHelperText error>{errors.submit}</FormHelperText>\n            </Box>\n          )}\n          <Box sx={{ mt: 2 }}>\n            <AnimateButton>\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Sign In\n              </Button>\n            </AnimateButton>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n"],"names":["useState","importShared","Link","useSearchParams","AwsCognitoLogin","others","login","isLoggedIn","useAuth","scriptedRef","useScriptRef","checked","setChecked","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","searchParams","authParam","jsx","Formik","Yup.object","Yup.string","value","values","setErrors","setStatus","setSubmitting","trimmedEmail","err","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","jsxs","CustomFormControl","InputLabel","OutlinedInput","FormHelperText","InputAdornment","IconButton","Visibility","VisibilityOff","Grid","FormControlLabel","Checkbox","Typography","Box","AnimateButton","Button"],"mappings":"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"}