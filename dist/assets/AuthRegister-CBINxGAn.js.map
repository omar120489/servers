{"version":3,"file":"AuthRegister-CBINxGAn.js","sources":["../../src/views/pages/authentication/firebase/AuthRegister.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport CustomFormControl from 'ui-component/extended/Form/CustomFormControl';\n\nimport useAuth from 'hooks/useAuth';\nimport useConfig from 'hooks/useConfig';\nimport useScriptRef from 'hooks/useScriptRef';\nimport { withAlpha } from 'utils/colorUtils';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport FirebaseSocial from './FirebaseSocial';\n\n// ===========================|| FIREBASE - REGISTER ||=========================== //\n\nexport default function FirebaseRegister({ ...others }) {\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  const [showPassword, setShowPassword] = useState(false);\n  const [checked, setChecked] = useState(true);\n\n  const {\n    state: { borderRadius }\n  } = useConfig();\n\n  const [strength, setStrength] = useState(0);\n  const [level, setLevel] = useState();\n  const { firebaseRegister } = useAuth();\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const changePassword = (value) => {\n    const temp = strengthIndicator(value);\n    setStrength(temp);\n    setLevel(strengthColor(temp));\n  };\n\n  useEffect(() => {\n    changePassword('123456');\n  }, []);\n\n  return (\n    <>\n      <Stack sx={{ gap: 2 }}>\n        <FirebaseSocial />\n        <Box sx={{ alignItems: 'center', display: 'flex' }}>\n          <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n          <Button\n            variant=\"outlined\"\n            sx={{\n              cursor: 'unset',\n              m: 2,\n              py: 0.5,\n              px: 7,\n              borderColor: `${theme.vars.palette.grey[100]} !important`,\n              color: `${theme.vars.palette.grey[900]}!important`,\n              fontWeight: 500,\n              borderRadius: `${borderRadius}px`,\n              ...theme.applyStyles('dark', {\n                borderColor: `${withAlpha(theme.vars.palette.dark.light, 0.2)} !important`\n              })\n            }}\n            disableRipple\n            disabled\n          >\n            OR\n          </Button>\n          <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n        </Box>\n        <Stack sx={{ alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n        </Stack>\n      </Stack>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n          password: Yup.string().max(255).required('Password is required')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await firebaseRegister?.(values.email, values.password);\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <Grid container spacing={{ xs: 0, md: 2 }}>\n              <Grid size={{ xs: 12, sm: 6 }}>\n                <CustomFormControl fullWidth>\n                  <InputLabel htmlFor=\"outlined-adornment-first-register\">First Name</InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-first-register\"\n                    type=\"text\"\n                    name=\"firstName\"\n                  />\n                </CustomFormControl>\n              </Grid>\n              <Grid size={{ xs: 12, sm: 6 }}>\n                <CustomFormControl fullWidth>\n                  <InputLabel htmlFor=\"outlined-adornment-last-register\">Last Name</InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-last-register\"\n                    type=\"text\"\n                    name=\"lastName\"\n                  />\n                </CustomFormControl>\n              </Grid>\n            </Grid>\n            <CustomFormControl fullWidth error={Boolean(touched.email && errors.email)}>\n              <InputLabel htmlFor=\"outlined-adornment-email-register\">\n                Email Address / Username\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-email-register\"\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                  {errors.email}\n                </FormHelperText>\n              )}\n            </CustomFormControl>\n\n            <CustomFormControl fullWidth error={Boolean(touched.password && errors.password)}>\n              <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password-register\"\n                type={showPassword ? 'text' : 'password'}\n                value={values.password}\n                name=\"password\"\n                label=\"Password\"\n                onBlur={handleBlur}\n                onChange={(e) => {\n                  handleChange(e);\n                  changePassword(e.target.value);\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                      size=\"large\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n              {touched.password && errors.password && (\n                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                  {errors.password}\n                </FormHelperText>\n              )}\n            </CustomFormControl>\n\n            {strength !== 0 && (\n              <FormControl fullWidth>\n                <Box sx={{ mb: 2 }}>\n                  <Stack direction=\"row\" sx={{ alignItems: 'center', gap: 2 }}>\n                    <Box\n                      sx={{ width: 85, height: 8, borderRadius: '7px', bgcolor: level?.color }}\n                    />\n                    <Typography variant=\"subtitle1\" sx={{ fontSize: '0.75rem' }}>\n                      {level?.label}\n                    </Typography>\n                  </Stack>\n                </Box>\n              </FormControl>\n            )}\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={checked}\n                  onChange={(event) => setChecked(event.target.checked)}\n                  name=\"checked\"\n                  color=\"primary\"\n                />\n              }\n              label={\n                <Typography variant=\"subtitle1\">\n                  Agree with &nbsp;\n                  <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                    Terms & Condition.\n                  </Typography>\n                </Typography>\n              }\n            />\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n                <Button\n                  disableElevation\n                  disabled={isSubmitting}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Sign up\n                </Button>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n"],"names":["useEffect","useState","importShared","Link","FirebaseRegister","others","theme","useTheme","scriptedRef","useScriptRef","showPassword","setShowPassword","checked","setChecked","borderRadius","useConfig","strength","setStrength","level","setLevel","firebaseRegister","useAuth","handleClickShowPassword","handleMouseDownPassword","event","changePassword","value","temp","strengthIndicator","strengthColor","jsxs","Fragment","Stack","jsx","FirebaseSocial","Box","Divider","Button","withAlpha","Typography","Formik","Yup.object","Yup.string","values","setErrors","setStatus","setSubmitting","err","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Grid","CustomFormControl","InputLabel","OutlinedInput","FormHelperText","e","InputAdornment","IconButton","Visibility","VisibilityOff","FormControl","FormControlLabel","Checkbox","AnimateButton"],"mappings":"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"}