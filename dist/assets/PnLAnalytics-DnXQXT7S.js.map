{"version":3,"file":"PnLAnalytics-DnXQXT7S.js","sources":["../../node_modules/@tabler/icons-react/dist/esm/icons/IconCash.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconFileTypeCsv.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconFileTypeXls.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconReceipt.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconRefresh.mjs","../../node_modules/@tabler/icons-react/dist/esm/icons/IconTrendingUp.mjs","../../src/services/pnl.ts","../../src/views/analytics/PnLAnalytics.tsx"],"sourcesContent":["/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M7 15h-3a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v3\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M7 9m0 1a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1z\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M12 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0\", \"key\": \"svg-2\" }]];\nconst IconCash = createReactComponent(\"outline\", \"cash\", \"Cash\", __iconNode);\n\nexport { __iconNode, IconCash as default };\n//# sourceMappingURL=IconCash.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M14 3v4a1 1 0 0 0 1 1h4\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M7 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0\", \"key\": \"svg-2\" }], [\"path\", { \"d\": \"M10 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75\", \"key\": \"svg-3\" }], [\"path\", { \"d\": \"M16 15l2 6l2 -6\", \"key\": \"svg-4\" }]];\nconst IconFileTypeCsv = createReactComponent(\"outline\", \"file-type-csv\", \"FileTypeCsv\", __iconNode);\n\nexport { __iconNode, IconFileTypeCsv as default };\n//# sourceMappingURL=IconFileTypeCsv.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M14 3v4a1 1 0 0 0 1 1h4\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M4 15l4 6\", \"key\": \"svg-2\" }], [\"path\", { \"d\": \"M4 21l4 -6\", \"key\": \"svg-3\" }], [\"path\", { \"d\": \"M17 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75\", \"key\": \"svg-4\" }], [\"path\", { \"d\": \"M11 15v6h3\", \"key\": \"svg-5\" }]];\nconst IconFileTypeXls = createReactComponent(\"outline\", \"file-type-xls\", \"FileTypeXls\", __iconNode);\n\nexport { __iconNode, IconFileTypeXls as default };\n//# sourceMappingURL=IconFileTypeXls.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2m4 -14h6m-6 4h6m-2 4h2\", \"key\": \"svg-0\" }]];\nconst IconReceipt = createReactComponent(\"outline\", \"receipt\", \"Receipt\", __iconNode);\n\nexport { __iconNode, IconReceipt as default };\n//# sourceMappingURL=IconReceipt.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\", \"key\": \"svg-1\" }]];\nconst IconRefresh = createReactComponent(\"outline\", \"refresh\", \"Refresh\", __iconNode);\n\nexport { __iconNode, IconRefresh as default };\n//# sourceMappingURL=IconRefresh.mjs.map\n","/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nconst __iconNode = [[\"path\", { \"d\": \"M3 17l6 -6l4 4l8 -8\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M14 7l7 0l0 7\", \"key\": \"svg-1\" }]];\nconst IconTrendingUp = createReactComponent(\"outline\", \"trending-up\", \"TrendingUp\", __iconNode);\n\nexport { __iconNode, IconTrendingUp as default };\n//# sourceMappingURL=IconTrendingUp.mjs.map\n","import { apiGet } from 'utils/axios';\nimport type { PnLQuery, PnLResponse } from 'types/api';\n\nconst API_BASE_URL = '/api/v1/pnl';\n\n/**\n * Get P&L (Profit & Loss) data with optional filters\n * \n * @param query - Filter parameters (utm_source, utm_campaign, ad_id, date range, group_by)\n * @returns P&L summary and rows grouped by specified dimension\n */\nexport async function getPnL(query?: PnLQuery): Promise<PnLResponse> {\n  return apiGet<PnLResponse>(API_BASE_URL, { params: query });\n}\n\nexport const pnlApi = {\n  getPnL\n};\n\n\n","import { useCallback, useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n  type SelectChangeEvent,\n  Menu,\n  MenuItem as MenuItemComponent,\n  ListItemIcon,\n  ListItemText\n} from '@mui/material';\nimport { \n  IconRefresh, \n  IconTrendingUp, \n  IconCash, \n  IconReceipt, \n  IconDownload, \n  IconFileTypeCsv, \n  IconFileTypeXls, \n  IconFileTypePdf \n} from '@tabler/icons-react';\n\nimport AppPage from 'layouts/AppPage';\nimport { pnlService } from 'services';\nimport type { PnLQuery, PnLResponse } from 'types/api';\n\nfunction formatCurrency(value: number): string {\n  return new Intl.NumberFormat(undefined, {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0\n  }).format(value);\n}\n\nfunction formatNumber(value: number, decimals = 2): string {\n  return value.toFixed(decimals);\n}\n\nexport default function PnLAnalytics() {\n  const [data, setData] = useState<PnLResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<unknown>(null);\n  \n  // Filters\n  const [filters, setFilters] = useState<PnLQuery>({});\n  const [utmSource, setUtmSource] = useState('');\n  const [utmCampaign, setUtmCampaign] = useState('');\n  const [adId, setAdId] = useState('');\n  const [dateFrom, setDateFrom] = useState('');\n  const [dateTo, setDateTo] = useState('');\n  \n  // Export menu\n  const [exportAnchorEl, setExportAnchorEl] = useState<null | HTMLElement>(null);\n  const exportMenuOpen = Boolean(exportAnchorEl);\n\n  const loadPnLData = useCallback(async (queryFilters?: PnLQuery) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await pnlService.getPnL(queryFilters);\n      setData(response);\n    } catch (err) {\n      setError(err);\n      console.error('[PnLAnalytics] Failed to load P&L data:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    void loadPnLData(filters);\n  }, [loadPnLData, filters]);\n\n  const handleApplyFilters = () => {\n    const newFilters: PnLQuery = {};\n    if (utmSource) newFilters.utm_source = utmSource;\n    if (utmCampaign) newFilters.utm_campaign = utmCampaign;\n    if (adId) newFilters.ad_id = adId;\n    if (dateFrom) newFilters.date_from = dateFrom;\n    if (dateTo) newFilters.date_to = dateTo;\n    setFilters(newFilters);\n  };\n\n  const handleClearFilters = () => {\n    setUtmSource('');\n    setUtmCampaign('');\n    setAdId('');\n    setDateFrom('');\n    setDateTo('');\n    setFilters({});\n  };\n\n  const handleRefresh = () => {\n    void loadPnLData(filters);\n  };\n\n  const handleExportMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setExportAnchorEl(event.currentTarget);\n  };\n\n  const handleExportMenuClose = () => {\n    setExportAnchorEl(null);\n  };\n\n  const handleExportCSV = () => {\n    if (!data || data.rows.length === 0) return;\n\n    const headers = [\n      'UTM Source', 'UTM Campaign', 'Ad ID', 'Leads', 'Deals',\n      'Gross Revenue', 'Direct Cost', 'Net Profit', 'ROAS', 'CPA'\n    ];\n\n    const csvRows = data.rows.map(row => [\n      row.utm_source || '', row.utm_campaign || '', row.ad_id || '',\n      row.leads_count, row.deals_count, row.gross_revenue, row.direct_cost,\n      row.net_profit, row.roas.toFixed(2), row.cpa.toFixed(2)\n    ]);\n\n    const csvContent = [\n      headers.join(','),\n      ...csvRows.map(row => row.join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `pnl-analytics-${new Date().toISOString().split('T')[0]}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n    handleExportMenuClose();\n  };\n\n  const handleExportExcel = () => {\n    if (!data || data.rows.length === 0) return;\n\n    const excelHTML = `\n      <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\">\n      <head>\n        <meta charset=\"utf-8\">\n        <style>\n          table { border-collapse: collapse; width: 100%; }\n          th { background-color: #4472C4; color: white; font-weight: bold; padding: 10px; border: 1px solid #ddd; }\n          td { padding: 8px; border: 1px solid #ddd; }\n          .number { mso-number-format: \"\\\\#\\\\,\\\\#\\\\#0\\\\.00\"; text-align: right; }\n          .currency { mso-number-format: \"\\\\$\\\\#\\\\,\\\\#\\\\#0\\\\.00\"; text-align: right; }\n        </style>\n      </head>\n      <body>\n        <h2>P&L Analytics Report</h2>\n        <p>Generated: ${new Date().toLocaleString()}</p>\n        <table>\n          <thead><tr><th>UTM Source</th><th>UTM Campaign</th><th>Ad ID</th><th>Leads</th><th>Deals</th><th>Gross Revenue</th><th>Direct Cost</th><th>Net Profit</th><th>ROAS</th><th>CPA</th></tr></thead>\n          <tbody>\n            ${data.rows.map(row => `\n              <tr>\n                <td>${row.utm_source || '—'}</td><td>${row.utm_campaign || '—'}</td><td>${row.ad_id || '—'}</td>\n                <td class=\"number\">${row.leads_count}</td><td class=\"number\">${row.deals_count}</td>\n                <td class=\"currency\">${row.gross_revenue}</td><td class=\"currency\">${row.direct_cost}</td>\n                <td class=\"currency\">${row.net_profit}</td>\n                <td class=\"number\">${row.roas.toFixed(2)}</td><td class=\"currency\">${row.cpa.toFixed(2)}</td>\n              </tr>\n            `).join('')}\n          </tbody>\n        </table>\n      </body>\n      </html>\n    `;\n\n    const blob = new Blob(['\\ufeff', excelHTML], { type: 'application/vnd.ms-excel;charset=utf-8' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `pnl-analytics-${new Date().toISOString().split('T')[0]}.xls`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n    URL.revokeObjectURL(url);\n    handleExportMenuClose();\n  };\n\n  const handleExportPDF = () => {\n    if (!data || data.rows.length === 0) return;\n\n    const printWindow = window.open('', '_blank');\n    if (!printWindow) return;\n\n    const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>P&L Analytics Report</title>\n          <style>\n            body { font-family: Arial, sans-serif; padding: 20px; }\n            h1 { color: #333; }\n            table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n            th, td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }\n            th { background-color: #f5f5f5; font-weight: bold; }\n            .positive { color: green; }\n            .negative { color: red; }\n          </style>\n        </head>\n        <body>\n          <h1>P&L Analytics Report</h1>\n          <p>Generated: ${new Date().toLocaleString()}</p>\n          <table>\n            <thead><tr><th>UTM Source</th><th>UTM Campaign</th><th>Ad ID</th><th>Leads</th><th>Deals</th><th>Gross Revenue</th><th>Direct Cost</th><th>Net Profit</th><th>ROAS</th><th>CPA</th></tr></thead>\n            <tbody>\n              ${data.rows.map(row => `\n                <tr>\n                  <td>${row.utm_source || '—'}</td><td>${row.utm_campaign || '—'}</td><td>${row.ad_id || '—'}</td>\n                  <td>${row.leads_count}</td><td>${row.deals_count}</td>\n                  <td>${formatCurrency(row.gross_revenue)}</td><td>${formatCurrency(row.direct_cost)}</td>\n                  <td class=\"${row.net_profit >= 0 ? 'positive' : 'negative'}\"><strong>${formatCurrency(row.net_profit)}</strong></td>\n                  <td>${formatNumber(row.roas, 2)}x</td><td>${formatCurrency(row.cpa)}</td>\n                </tr>\n              `).join('')}\n            </tbody>\n          </table>\n        </body>\n      </html>\n    `;\n\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n    printWindow.onload = () => {\n      printWindow.print();\n      printWindow.close();\n    };\n    handleExportMenuClose();\n  };\n\n  const availableSources = data?.rows\n    ? Array.from(new Set(data.rows.map(r => r.utm_source).filter(Boolean)))\n    : [];\n  \n  const availableCampaigns = data?.rows\n    ? Array.from(new Set(data.rows.map(r => r.utm_campaign).filter(Boolean)))\n    : [];\n  \n  const availableAdIds = data?.rows\n    ? Array.from(new Set(data.rows.map(r => r.ad_id).filter(Boolean)))\n    : [];\n\n  const actions = (\n    <>\n      <Button\n        variant=\"outlined\"\n        startIcon={<IconDownload />}\n        onClick={handleExportMenuOpen}\n        disabled={loading || !data || data.rows.length === 0}\n        size=\"small\"\n      >\n        Export\n      </Button>\n      <Menu anchorEl={exportAnchorEl} open={exportMenuOpen} onClose={handleExportMenuClose}>\n        <MenuItemComponent onClick={handleExportCSV}>\n          <ListItemIcon><IconFileTypeCsv size={20} /></ListItemIcon>\n          <ListItemText>Export as CSV</ListItemText>\n        </MenuItemComponent>\n        <MenuItemComponent onClick={handleExportExcel}>\n          <ListItemIcon><IconFileTypeXls size={20} /></ListItemIcon>\n          <ListItemText>Export as Excel</ListItemText>\n        </MenuItemComponent>\n        <MenuItemComponent onClick={handleExportPDF}>\n          <ListItemIcon><IconFileTypePdf size={20} /></ListItemIcon>\n          <ListItemText>Export as PDF</ListItemText>\n        </MenuItemComponent>\n      </Menu>\n      <Button\n        variant=\"outlined\"\n        startIcon={<IconRefresh />}\n        onClick={handleRefresh}\n        disabled={loading}\n        size=\"small\"\n      >\n        Refresh\n      </Button>\n    </>\n  );\n\n  const toolbar = (\n    <Paper sx={{ p: 2 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>Filters</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={2.4}>\n          <TextField\n            fullWidth\n            size=\"small\"\n            label=\"Date From\"\n            type=\"date\"\n            value={dateFrom}\n            onChange={(e) => setDateFrom(e.target.value)}\n            InputLabelProps={{ shrink: true }}\n          />\n        </Grid>\n        <Grid item xs={12} md={2.4}>\n          <TextField\n            fullWidth\n            size=\"small\"\n            label=\"Date To\"\n            type=\"date\"\n            value={dateTo}\n            onChange={(e) => setDateTo(e.target.value)}\n            InputLabelProps={{ shrink: true }}\n          />\n        </Grid>\n        <Grid item xs={12} md={2.4}>\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>UTM Source</InputLabel>\n            <Select value={utmSource} onChange={(e: SelectChangeEvent) => setUtmSource(e.target.value)} label=\"UTM Source\">\n              <MenuItem value=\"\">All Sources</MenuItem>\n              {availableSources.map((source) => (\n                <MenuItem key={source} value={source}>{source}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={2.4}>\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>UTM Campaign</InputLabel>\n            <Select value={utmCampaign} onChange={(e: SelectChangeEvent) => setUtmCampaign(e.target.value)} label=\"UTM Campaign\">\n              <MenuItem value=\"\">All Campaigns</MenuItem>\n              {availableCampaigns.map((campaign) => (\n                <MenuItem key={campaign} value={campaign}>{campaign}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} md={2.4}>\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>Ad ID</InputLabel>\n            <Select value={adId} onChange={(e: SelectChangeEvent) => setAdId(e.target.value)} label=\"Ad ID\">\n              <MenuItem value=\"\">All Ads</MenuItem>\n              {availableAdIds.map((id) => (\n                <MenuItem key={id} value={id}>{id}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\">\n            <Button variant=\"contained\" onClick={handleApplyFilters} size=\"small\">Apply Filters</Button>\n            <Button variant=\"outlined\" onClick={handleClearFilters} size=\"small\">Clear All</Button>\n          </Stack>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n\n  return (\n    <AppPage\n      title=\"P&L Analytics\"\n      subtitle=\"Profit & Loss analysis by traffic source\"\n      actions={actions}\n      toolbar={toolbar}\n      loading={loading}\n      error={error}\n      empty={!data || data.rows.length === 0}\n      onRetry={handleRefresh}\n    >\n      {/* KPI Cards */}\n      {data && (\n        <>\n          <Grid container spacing={3} sx={{ mb: 3 }}>\n            <Grid item xs={12} md={4}>\n              <Card>\n                <CardContent>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                    <Box sx={{ p: 1.5, borderRadius: 2, bgcolor: 'success.light', display: 'flex' }}>\n                      <IconCash size={32} color=\"green\" />\n                    </Box>\n                    <Box sx={{ flex: 1 }}>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">Total Net Profit</Typography>\n                      <Typography variant=\"h4\" sx={{ color: 'success.main' }}>\n                        {formatCurrency(data.summary.total_net_profit)}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {data.summary.total_deals} deals closed\n                      </Typography>\n                    </Box>\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Grid>\n\n            <Grid item xs={12} md={4}>\n              <Card>\n                <CardContent>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                    <Box sx={{ p: 1.5, borderRadius: 2, bgcolor: 'primary.light', display: 'flex' }}>\n                      <IconTrendingUp size={32} color=\"blue\" />\n                    </Box>\n                    <Box sx={{ flex: 1 }}>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">Average ROAS</Typography>\n                      <Typography variant=\"h4\" sx={{ color: 'primary.main' }}>\n                        {formatNumber(data.summary.average_roas, 2)}x\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">Return on Ad Spend</Typography>\n                    </Box>\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Grid>\n\n            <Grid item xs={12} md={4}>\n              <Card>\n                <CardContent>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                    <Box sx={{ p: 1.5, borderRadius: 2, bgcolor: 'warning.light', display: 'flex' }}>\n                      <IconReceipt size={32} color=\"orange\" />\n                    </Box>\n                    <Box sx={{ flex: 1 }}>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">Average CPA</Typography>\n                      <Typography variant=\"h4\" sx={{ color: 'warning.main' }}>\n                        {formatCurrency(data.summary.average_cpa)}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">Cost Per Acquisition</Typography>\n                    </Box>\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n\n          {/* Data Table */}\n          <TableContainer component={Paper} sx={{ overflowX: 'auto' }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>UTM Source</TableCell>\n                  <TableCell>UTM Campaign</TableCell>\n                  <TableCell>Ad ID</TableCell>\n                  <TableCell align=\"right\">Leads</TableCell>\n                  <TableCell align=\"right\">Deals</TableCell>\n                  <TableCell align=\"right\">Gross Revenue</TableCell>\n                  <TableCell align=\"right\">Direct Cost</TableCell>\n                  <TableCell align=\"right\">Net Profit</TableCell>\n                  <TableCell align=\"right\">ROAS</TableCell>\n                  <TableCell align=\"right\">CPA</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.rows.map((row, index) => (\n                  <TableRow key={`${row.utm_source}-${row.utm_campaign}-${row.ad_id}-${index}`} hover>\n                    <TableCell>{row.utm_source || '—'}</TableCell>\n                    <TableCell>{row.utm_campaign || '—'}</TableCell>\n                    <TableCell>{row.ad_id || '—'}</TableCell>\n                    <TableCell align=\"right\">{row.leads_count}</TableCell>\n                    <TableCell align=\"right\">{row.deals_count}</TableCell>\n                    <TableCell align=\"right\">{formatCurrency(row.gross_revenue)}</TableCell>\n                    <TableCell align=\"right\">{formatCurrency(row.direct_cost)}</TableCell>\n                    <TableCell align=\"right\" sx={{ color: row.net_profit >= 0 ? 'success.main' : 'error.main' }}>\n                      <strong>{formatCurrency(row.net_profit)}</strong>\n                    </TableCell>\n                    <TableCell align=\"right\">{formatNumber(row.roas, 2)}x</TableCell>\n                    <TableCell align=\"right\">{formatCurrency(row.cpa)}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </>\n      )}\n    </AppPage>\n  );\n}\n\n"],"names":["__iconNode","IconCash","createReactComponent","IconFileTypeCsv","IconFileTypeXls","IconReceipt","IconRefresh","IconTrendingUp","API_BASE_URL","getPnL","query","apiGet","useCallback","useEffect","useState","importShared","Box","Button","Card","CardContent","FormControl","Grid","InputLabel","MenuItem","Paper","Select","Stack","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Typography","Menu","MenuItemComponent","ListItemIcon","ListItemText","formatCurrency","value","formatNumber","decimals","PnLAnalytics","data","setData","loading","setLoading","error","setError","filters","setFilters","utmSource","setUtmSource","utmCampaign","setUtmCampaign","adId","setAdId","dateFrom","setDateFrom","dateTo","setDateTo","exportAnchorEl","setExportAnchorEl","exportMenuOpen","loadPnLData","queryFilters","response","pnlService.getPnL","err","handleApplyFilters","newFilters","handleClearFilters","handleRefresh","handleExportMenuOpen","event","handleExportMenuClose","handleExportCSV","headers","csvRows","row","csvContent","blob","link","url","handleExportExcel","excelHTML","handleExportPDF","printWindow","htmlContent","availableSources","r","availableCampaigns","availableAdIds","actions","jsxs","Fragment","jsx","IconDownload","IconFileTypePdf","toolbar","e","source","campaign","id","AppPage","index"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}