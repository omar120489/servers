{"version":3,"file":"DealDetailPage-LeSGLikR.js","sources":["../../src/views/pages/deals/DealDetailPage.tsx"],"sourcesContent":["import { useCallback, useEffect, useState, type ReactElement } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Grid from '@mui/material/GridLegacy';\nimport Typography from '@mui/material/Typography';\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport { dealsApi } from 'services/deals';\nimport type { Deal } from 'types/api';\nimport { isAxiosError } from 'axios';\n\nfunction formatCurrency(value?: number | null) {\n  if (value === null || value === undefined || Number.isNaN(value)) {\n    return '—';\n  }\n\n  return new Intl.NumberFormat(undefined, {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 2\n  }).format(value);\n}\n\nfunction formatProbability(value?: number | null) {\n  if (value === null || value === undefined || Number.isNaN(value)) {\n    return '—';\n  }\n\n  const display = value > 1 ? value : value * 100;\n  return `${Math.round(display)}%`;\n}\n\nfunction formatDate(value?: string | null) {\n  if (!value) {\n    return '—';\n  }\n\n  return new Intl.DateTimeFormat(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).format(new Date(value));\n}\n\ntype LoadError = { kind: 'not-found'; message: string } | { kind: 'network'; message: string };\n\nfunction isValidDealId(value: string | undefined): value is string {\n  if (!value) return false;\n  const uuidPattern =\n    /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/;\n  const numericPattern = /^\\d+$/;\n  return uuidPattern.test(value) || numericPattern.test(value);\n}\n\nexport default function DealDetailPage(): ReactElement {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const [deal, setDeal] = useState<Deal | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<LoadError | null>(null);\n\n  const loadDeal = useCallback(async () => {\n    if (!isValidDealId(id)) {\n      setError({\n        kind: 'not-found',\n        message: 'The requested deal could not be found.'\n      });\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    try {\n      const result = await dealsApi.getDeal(id);\n      setDeal(result);\n      setError(null);\n    } catch (err) {\n      if (isAxiosError(err)) {\n        if (err.response?.status === 404) {\n          setError({\n            kind: 'not-found',\n            message: 'The requested deal could not be found.'\n          });\n        } else {\n          setError({\n            kind: 'network',\n            message:\n              err.response?.data?.message ??\n              'We could not load this deal. Please try again in a moment.'\n          });\n        }\n      } else {\n        setError({\n          kind: 'network',\n          message: 'We could not load this deal. Please try again in a moment.'\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    void loadDeal();\n  }, [loadDeal]);\n\n  return (\n    <MainCard\n      title=\"Deal Details\"\n      secondary={\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Button variant=\"outlined\" onClick={() => navigate(-1)}>\n            Back\n          </Button>\n          {id && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => navigate(`/deals/${id}/edit`)}\n            >\n              Edit Deal\n            </Button>\n          )}\n        </Box>\n      }\n    >\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 6 }}>\n          <CircularProgress />\n        </Box>\n      )}\n\n      {!loading && error && (\n        <Alert severity={error.kind === 'network' ? 'error' : 'warning'}>\n          <Typography variant=\"body2\" sx={{ mb: 1 }}>\n            {error.message}\n          </Typography>\n          <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n            {error.kind === 'network' && (\n              <Button size=\"small\" onClick={() => void loadDeal()} variant=\"outlined\">\n                Retry\n              </Button>\n            )}\n            <Button size=\"small\" variant=\"contained\" onClick={() => navigate('/deals')}>\n              Back to Deals\n            </Button>\n          </Box>\n        </Alert>\n      )}\n\n      {!loading && !error && deal && (\n        <Grid container spacing={2}>\n          <Grid xs={12} sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n            <Typography variant=\"h4\">{deal.name}</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Deal ID: {deal.id}\n            </Typography>\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Amount\n            </Typography>\n            <Typography variant=\"body1\">{formatCurrency(deal.amount)}</Typography>\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Stage\n            </Typography>\n            <Chip label={deal.stage ?? '—'} variant=\"outlined\" size=\"small\" />\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Status\n            </Typography>\n            <Chip label={deal.status ?? '—'} color=\"primary\" size=\"small\" variant=\"outlined\" />\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Probability\n            </Typography>\n            <Typography variant=\"body1\">{formatProbability(deal.probability)}</Typography>\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Close Date\n            </Typography>\n            <Typography variant=\"body1\">{formatDate(deal.closeDate)}</Typography>\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Owner\n            </Typography>\n            <Typography variant=\"body1\">{deal.ownerId}</Typography>\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Company\n            </Typography>\n            <Typography variant=\"body1\">{deal.companyId ?? '—'}</Typography>\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Contact\n            </Typography>\n            <Typography variant=\"body1\">{deal.contactId ?? '—'}</Typography>\n          </Grid>\n\n          <Grid xs={12} md={6}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Updated At\n            </Typography>\n            <Typography variant=\"body1\">{formatDate(deal.updatedAt)}</Typography>\n          </Grid>\n\n          <Grid xs={12}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Description\n            </Typography>\n            <Typography variant=\"body1\">{deal.description ?? '—'}</Typography>\n          </Grid>\n        </Grid>\n      )}\n    </MainCard>\n  );\n}\n"],"names":["useCallback","useEffect","useState","importShared","useNavigate","useParams","formatCurrency","value","formatProbability","display","formatDate","isValidDealId","uuidPattern","numericPattern","DealDetailPage","id","navigate","deal","setDeal","loading","setLoading","error","setError","loadDeal","result","dealsApi","err","isAxiosError","jsxs","MainCard","Box","jsx","Button","CircularProgress","Alert","Typography","Grid","Chip"],"mappings":"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"}